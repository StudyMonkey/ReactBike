{"version":3,"sources":["App.js","pages/login/index.js","utils/utils.js","axios/index.js","components/Header/index.js","redux/action/index.js","config/menuConfig.js","components/NavLeft/index.js","components/Footer/index.js","admin.js","pages/home/index.js","pages/ui/Buttons.js","pages/ui/Modal.js","pages/ui/loading.js","pages/ui/notice.js","pages/ui/Message.js","pages/ui/Tabs.js","pages/ui/Gallery.js","pages/ui/Carousel.js","pages/form/Login.js","pages/form/Regist.js","pages/table/Basic.js","pages/table/High.js","pages/rich/index.js","components/BaseForm/index.js","pages/city/index.js","pages/order/index.js","Common.js","pages/order/Detail.js","components/ETable/index.js","pages/user/index.js","pages/map/bikeMap.js","pages/chart/bar/index.js","pages/chart/pie/index.js","pages/chart/line/index.js","pages/permission/index.js","pages/nomatch/index.js","router.js","redux/reducer/index.js","index.js","redux/store/index.js"],"names":["App","react_default","a","createElement","this","props","children","Component","Login","Option","select_default","utils","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","pagination","data","callback","onChange","current","result","page","pageSize","total","showTotal","concat","showQuickJumper","getOptionList","options","map","item","push","value","id","key","name","updateSelectedItem","selectedRowKeys","selectedRows","selectedIds","setState","selectedItem","Axios","_this","url","params","isMock","ajax","then","list","index","dataSource","Utils","requestList","Promise","resolve","reject","JsonP","param","err","response","status","message","isShowLoading","document","getElementById","style","display","baseApi","axios","methods","baseUrl","timeout","res","code","modal_default","info","title","content","msg","Header","userName","setInterval","sysTime","getTime","_this2","jsonp","encodeURIComponent","results","weather_data","dayPictureUrl","weather","_this$props","menuName","menuType","className","row_default","col_default","span","src","alt","state","href","JSON","parse","localStorage","getItem","connect","type","SWITCH_MENU","menuList","btnList","SubMenu","menu_default","NavLeft","currentKey","renderMenu","Item","NavLink","to","handleMenuClick","_ref","console","log","dispatch","setItem","stringify","menuTreeNode","MenuConfig","window","location","hash","replace","theme","selectedKeys","onClick","Footer","Admin","src_components_NavLeft","src_components_Header","Footer_Footer","Home","ButtonGroup","button_default","Group","Buttons","handleCloseLoading","loading","handleChangeRadio","e","size","target","card_default","disabled","icon","shape","radio_default","Modals","handleOk","obj","Object","defineProperty","handleCancle","handleShow","handleConfirm","onOk","onCancel","visible1","visible2","visible3","visible4","visible5","visible6","visible7","visible8","visible","okText","cancelText","top","centered","Loading","icon_default","spin_default","indicator","alert_default","description","tip","Notice","openNotification","notification_default","open","openNotificationWithIcon","direction","config","placement","Message","handleInfo","message_default","handleInfoType","handleLoadInfo","success","TabPane","tabs_default","Tab","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newTabIndex","handleTabClick","handleModeChange","mode","activeKey","onEdit","targetKey","action","add","panes","remove","lastIndex","forEach","pane","i","filter","closable","defaultActiveKey","tab","marginBottom","Button","tabPosition","height","Gallery","handleShowImg","imgSrc","currentImg","imgList","cover","Meta","gutter","md","width","footer","Carousels","handleAfterChange","b","c","carousel_default","afterChange","autoplay","effect","vertical","FormItem","form_default","handleSubmit","userInfo","form","getFieldsValue","validateFields","values","passWord","getFieldDecorator","layout","input_default","placeholder","initialValue","rules","required","min","max","prefix","valuePropName","checkbox_default","float","form_Login","create","TextArea","Regist","registInfo","userPwd","formItemLabel","labelCol","xs","sm","wrapperCol","offsetLayout","offset","Regist_FormItem","assign","label","input_number_default","switch_default","moment","date_picker_default","showTime","format","autosize","minRows","maxRows","time_picker_default","upload_default","listType","showUploadList","userImg","form_Regist","basicTable","dataSource1","request","assertThisInitialized","Util","handleRowClick","record","selectKey","interest","handleBtnClick","rows","ids","confirm","join","sex","address","birthdate","_this3","rowSelection","rowCheckSelection","columns","dataIndex","render","1","2","3","4","5","6","7","8","tag_default","color","table_default","bordered","onRow","High","handleChange","filters","sorter","order","sortOrder","handleBtnDelete","columns2","fixed","columns3","age","columns4","badge_default","text","scroll","y","x","richText","showRichText","editorState","onEditorStateChange","handleClearContent","handleGetText","onEditorChange","contentState","react_draft_wysiwyg","onContentStateChange","draftToHtml","CommonForm","handleFilterSubmit","fieldValue","filterSubmit","reset","resetFields","initFormList","formList","formItemList","length","field","city","BaseForm_FormItem","begin_time","end_time","colon","INPUT","SELECT","CHECKBOX","DATE","BaseForm","CityIndex","isShowOpenCity","handleOpenCity","cityInfo","cityForm","handleFilter","op_mode","arr","user_name","city_OpenCityForm","wrappedComponentRef","inst","OpenCityForm","formItemLayout","city_FormItem","city_Option","OrderIndex","orderConfirmVisivle","handleEndComfirm","handleEndOrder","order_id","order_num","handleOrderDetail","miles","Common","OrderDetail","renderMap","BMap","Map","addMapControl","drawBikeRoute","position_list","drawServiceArea","area","addControl","ScaleControl","anchor","BMAP_ANCHOR_TOP_RIGHT","NavigationControl","positionList","startPoint","endPoint","first","last","Point","lon","lat","startIcon","Icon","Size","imageSize","startMarker","Marker","addOverlay","endIcon","endMarker","trackPoint","point","polyLine","Polyline","strokeColor","strokeWeight","strokeOpacity","centerAndZoom","polygon","Polygon","fillColor","getDetailInfo","orderId","orderInfo","match","order_sn","bike_sn","mobile","start_location","end_location","distance","ETable","onRowClick","indexOf","splice","onSelectChange","onSelectAll","selected","changeRows","getOptions","p","name_list","订单编号","车辆编号","手机号码","用户姓名","密码","运维区域","车型","故障编号","代理商编码","角色ID","onSelect","row_selection","React","RadioGroup","UserIndex","isVisible","handleOperate","userForm","ETable_ETable","bind","user_UserForm","UserForm","user_FormItem","user_Option","user_TextArea","user","bikeMap","total_count","filterParams","route_list","gps1","split","gps2","startPointIcon","bikeMarkerStart","endPointIcon","bikeMarkerEnd","routeList","servicePointList","service_list","pplyServiceLine","bikeList","bike_list","bikeIcon","bikeMarker","ChartBar","getOption","tooltip","trigger","xAxis","yAxis","series","getOption2","legend","lib_default","option","ChartPie","orient","right","bottom","formatter","radius","getOption3","sort","roseType","ChartLine","boundaryGap","areaStyle","TreeNode","PermissionIndex","showCreateForm","isPermVisible","isAuthorize","handleCreatUser","handleSetAuth","detailInfo","menuInfo","menus","handlePermOk","permEditForm","role_id","objectSpread","handleRoleSubmit","roleForm","dara","handleUser","getRoleUserList","getAuthUserList","mockData","targetKeys","user_id","handleAuthCommit","user_ids","permission_RoleForm","permission_PermEditForm","patchMenuInfo","checkedKeys","permission_RoleAuthForm","roleAuthForm","patchUserInfo","RoleForm","permission_FormItem","permission_Option","PermEditForm","renderTreeNodes","handleTreeCheck","keys","_this4","detail_Info","menu_Info","role_name","tree_default","checkable","defaultExpandAll","onCheck","TreeData","RoleAuthForm","filterOption","inputValue","titles","handleAuthChange","_this5","transfer_default","listStyle","showSearch","searchPlaceholder","NoMatch","IRouter","HashRouter","src_App","Switch","Route","path","component","Common_Common","admin_Admin","Modal","Tabs","Carousel","FormLogin","FormRegist","Basic","Rich","BikeMap","Redirect","reducer","store","createStore","composeWithDevTools","ReactDOM","es","router_IRouter"],"mappings":"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","file":"static/js/main.711db894.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React,{ Component } from 'react'\r\n\r\nexport default class Login extends Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                This is Login page\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Select } from 'antd';\r\nconst Option = Select.Option \r\nexport default {\r\n    formateDate (time) {\r\n        if ( !time ) return '';\r\n        const date = new Date(time);\r\n        return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate()+' '+date.getHours()+'：'+date.getMinutes()+'：'+date.getSeconds();\r\n    },\r\n\r\n    pagination (data, callback) {\r\n        return {\r\n            onChange: (current) => {\r\n                callback(current)\r\n            },\r\n            current: data.result.page,\r\n            pageSize: data.result.pageSize,\r\n            total: data.result.total,\r\n            showTotal: ()=>{\r\n                return `共 ${data.result.total} 条`\r\n            },\r\n            showQuickJumper: true\r\n        }\r\n    },\r\n\r\n    getOptionList (data) {\r\n        if (!data) {\r\n            return []\r\n        }\r\n        let options = [];\r\n        data.map( item => {\r\n            options.push(<Option value={item.id} key={item.id}>{item.name}</Option>)\r\n        })\r\n        return options\r\n    },\r\n\r\n    /**\r\n     * ETable 行点击通用函数\r\n     * @param {*选中行的索引} selectedRowKeys\r\n     * @param {*选中行对象} selectedItem\r\n     */\r\n    updateSelectedItem(selectedRowKeys, selectedRows, selectedIds) {\r\n        if (selectedIds) {\r\n            this.setState({\r\n                selectedRowKeys,\r\n                selectedIds: selectedIds,\r\n                selectedItem: selectedRows\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedRowKeys,\r\n                selectedItem: selectedRows\r\n            })\r\n        }\r\n    },    \r\n}","import JsonP from 'jsonp'\r\nimport axios from 'axios'\r\nimport { Modal } from 'antd'\r\nimport Utils from './../utils/utils'\r\n\r\nexport default class Axios {\r\n\r\n    static requestList( _this, url, params, isMock ) {\r\n        var data ={\r\n            params,\r\n            isMock\r\n        }\r\n        this.ajax({\r\n            url,\r\n            data\r\n        }).then( (data) => {\r\n            if ( data && data.result ) {\r\n                let list = data.result.list.map((item,index) => {\r\n                    item.key = index;\r\n                    return item\r\n                })\r\n                _this.setState({\r\n                    list,\r\n                    dataSource: data.result.list,\r\n                    pagination: Utils.pagination(data,(current) => {\r\n                        _this.params.page = current;\r\n                        _this.requestList()\r\n                    })\r\n                })                \r\n            }\r\n        })\r\n    }\r\n\r\n    static jsonp(options) {\r\n        return new Promise( (resolve,reject) => {\r\n            JsonP(options.url, {\r\n                param: 'callback'\r\n            },function(err, response){\r\n                //to-do\r\n                if (response.status === 'success') {\r\n                    resolve(response)\r\n                } else {\r\n                    reject(response.message);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    static ajax(options) {\r\n        let loading;\r\n        if ( options.data && options.data.isShowLoading !== false ) {\r\n            loading = document.getElementById('ajaxLoading');\r\n            loading.style.display = 'block'\r\n        }\r\n        let baseApi = '';\r\n        if ( options.isMock ) {\r\n            baseApi = 'https://www.easy-mock.com/mock/5c203c05b34d7a55ce518f5f/bikeApi' // 开发环境API\r\n        } else {\r\n            baseApi = 'https://www.easy-mock.com/mock/5c203c05b34d7a55ce518f5f/bikeApi' // 正式环境API\r\n        }\r\n        return new Promise( (resolve, reject ) => {\r\n            axios({\r\n                url: baseApi+options.url,\r\n                methods: 'get',\r\n                baseUrl: baseApi,\r\n                timeout: 5000,\r\n                params: (options.data && options.data.params) || ''\r\n            }).then( (response) => {\r\n                if ( options.data && options.data.isShowLoading !== false ) {\r\n                    loading = document.getElementById('ajaxLoading');\r\n                    loading.style.display = 'none'\r\n                }                \r\n                if( response.status === 200 ) {\r\n                    let res = response.data;\r\n                    if ( res.code === 200 ) {\r\n                        resolve(res)\r\n                    }else{\r\n                        Modal.info({\r\n                            title: \"提示\",\r\n                            content: res.msg\r\n                        })\r\n                    }\r\n                } else {\r\n                    reject(response.data)\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport './index.less'\r\nimport Utils from './../../utils/utils'\r\nimport axios from './../../axios'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Header extends Component {\r\n\r\n    componentWillMount () {\r\n        this.setState( () => ({\r\n            userName: '管理员'\r\n        }))\r\n\r\n        \r\n        setInterval( ()=> {\r\n            const sysTime = Utils.formateDate(new Date().getTime());\r\n            this.setState ( () => ({\r\n                sysTime\r\n            }))\r\n        },1000)\r\n        // this.getWeatherAPIData();\r\n    }\r\n\r\n    getWeatherAPIData () {\r\n        let city = '长沙';\r\n        axios.jsonp({\r\n            url: 'http://api.map.baidu.com/telematics/v3/weather?location='+encodeURIComponent(city)+'&output=json&ak=3p49MVra6urFRGOT9s8UBWr2'\r\n        }).then( (res) => {\r\n            if ( res.status === 'success' ) {\r\n                const data = res.results[0].weather_data[0];\r\n                this.setState( () => ({\r\n                    dayPictureUrl: data.dayPictureUrl,\r\n                    weather: data.weather\r\n                }))\r\n            }\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const { menuName,menuType } = this.props\r\n        return (\r\n            <div className=\"header\">\r\n                <Row className=\"header-top\">\r\n                    {\r\n                        menuType ? \r\n                            <Col span=\"6\"  className=\"logo\">\r\n                                <img src=\"/assets/logo-ant.svg\" alt=\"logo图片\" />\r\n                                <span>小毛单车</span>\r\n                            </Col> : ''\r\n                    }\r\n                    <Col span={menuType ? 18 : 24}>\r\n                        <span>欢迎，{ this.state.userName }</span>\r\n                        <a href=\"http://www.baidu.com\">退出</a>\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                    menuType ? '' :\r\n                    <Row className=\"breadcrumb\">\r\n                        <Col span=\"4\" className=\"breadcrumb-title\">\r\n                            {menuName || JSON.parse(localStorage.getItem('menu'))}\r\n                        </Col>\r\n                        <Col span=\"20\" className=\"weather\">\r\n                            <span className=\"date\">{ this.state.sysTime }</span>\r\n                            <span className=\"weather-img\">\r\n                                <img src={this.state.dayPictureUrl} alt=\"天气图片\" />\r\n                            </span>\r\n                            <span className=\"weather-text\">\r\n                                {this.state.weather}\r\n                            </span>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        menuName: state.menuName\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Header);","/* \r\n* Action 类型\r\n*/\r\nexport const type= {\r\n    SWITCH_MENU: 'SWITCH_MENU'\r\n}\r\n\r\nexport function switchMenu(menuName) {\r\n    console.log('actionjs',menuName)\r\n    return {\r\n        type: type.SWITCH_MENU,\r\n        menuName\r\n    }\r\n}","const menuList = [\r\n    {\r\n        title:'首页',\r\n        key:'/home'\r\n    },\r\n    {\r\n        title:'UI',\r\n        key:'/ui',\r\n        children:[\r\n            {\r\n                title:'按钮',\r\n                key:'/ui/buttons',\r\n            },\r\n            {\r\n                title:'弹框',\r\n                key:'/ui/modals',\r\n            },\r\n            {\r\n                title:'Loading',\r\n                key:'/ui/loadings',\r\n            },\r\n            {\r\n                title:'通知提醒',\r\n                key:'/ui/notification',\r\n            },\r\n            {\r\n                title:'全局Message',\r\n                key:'/ui/messages',\r\n            },\r\n            {\r\n                title:'Tab页签',\r\n                key:'/ui/tabs',\r\n            },\r\n            {\r\n                title:'图片画廊',\r\n                key:'/ui/gallery',\r\n            },\r\n            {\r\n                title:'轮播图',\r\n                key:'/ui/carousel',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title:'表单',\r\n        key:'/form',\r\n        children:[\r\n            {\r\n                title:'登录',\r\n                key:'/form/login',\r\n            },\r\n            {\r\n                title:'注册',\r\n                key:'/form/reg',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title:'表格',\r\n        key:'/table',\r\n        children:[\r\n            {\r\n                title:'基础表格',\r\n                key:'/table/basic',\r\n            },\r\n            {\r\n                title:'高级表格',\r\n                key:'/table/high',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title:'富文本',\r\n        key:'/rich'\r\n    },\r\n    {\r\n        title:'城市管理',\r\n        key:'/city'\r\n    },\r\n    {\r\n        title:'订单管理',\r\n        key:'/order',\r\n        btnList:[\r\n            {\r\n                title:'订单详情',\r\n                key:'detail'\r\n            },\r\n            {\r\n                title:'结束订单',\r\n                key:'finish'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title:'员工管理',\r\n        key:'/user'\r\n    },\r\n    {\r\n        title:'车辆地图',\r\n        key:'/bikeMap'\r\n    },\r\n    {\r\n        title:'图标',\r\n        key:'/charts',\r\n        children:[\r\n            {\r\n                title:'柱形图',\r\n                key:'/charts/bar',\r\n                children:[\r\n                    {\r\n                        title:'柱形图1',\r\n                        key:'/charts/bar/bar1' ,\r\n                        children: [\r\n                            {\r\n                                title:'柱形图11',\r\n                                key:'/charts/bar/bar1/bar11'                                \r\n                            }\r\n                        ]                       \r\n                    },\r\n                    {\r\n                        title:'柱形图2',\r\n                        key:'/charts/bar/bar2'                        \r\n                    }                    \r\n                ]\r\n            },\r\n            {\r\n                title:'饼图',\r\n                key:'/charts/pie'\r\n            },\r\n            {\r\n                title:'折线图',\r\n                key:'/charts/line'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title:'权限设置',\r\n        key:'/permission'\r\n    },\r\n];\r\nexport default menuList;","import React, { Component } from 'react';\r\nimport { Menu } from 'antd';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { switchMenu } from './../../redux/action'\r\nimport MenuConfig from './../../config/menuConfig';\r\nimport './index.less'\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nclass NavLeft extends Component {\r\n\r\n    state = {\r\n        currentKey: ''\r\n    }\r\n\r\n    componentWillMount () {\r\n        const menuTreeNode = this.renderMenu(MenuConfig);\r\n        const currentKey = window.location.hash.replace(/#|\\?.*$/g,'');\r\n        this.setState( () => ({\r\n            menuTreeNode,\r\n            currentKey\r\n        }))\r\n    }\r\n\r\n    renderMenu = (data) => {\r\n        return data.map((item) => {\r\n            if ( item.children ) {\r\n                return (\r\n                    <SubMenu title={item.title} key={item.key}>\r\n                        { this.renderMenu(item.children) }\r\n                    </SubMenu>\r\n                )\r\n            } \r\n            return (<Menu.Item title={item.title} key={item.key}>\r\n                <NavLink to={item.key}>{item.title}</NavLink>\r\n            </Menu.Item> )          \r\n        })\r\n    }\r\n\r\n    handleMenuClick = ({item,key}) => {\r\n        console.log(item);\r\n        const { dispatch } = this.props; // 下面connect()(NavLeft)之后，才能取到dispatch\r\n        dispatch(switchMenu(item.props.title));\r\n        localStorage.setItem('menu',JSON.stringify(item.props.title))\r\n        this.setState({\r\n            currentKey: key\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <div className=\"logo\">\r\n                    <img src=\"/assets/logo-ant.svg\" alt=\"\"/>\r\n                    <h1>小毛单车</h1>\r\n                </div>\r\n                <Menu \r\n                    theme=\"dark\" \r\n                    selectedKeys={this.state.currentKey}\r\n                    onClick={ this.handleMenuClick }\r\n                >\r\n                    { this.state.menuTreeNode }\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(NavLeft);","import React,{ Component } from 'react';\r\nimport './index.less'\r\n\r\nexport default class Footer extends Component {\r\n    render () {\r\n        return (\r\n            <div className=\"footer\">\r\n                版权所有：张家界&小毛（推荐使用谷歌浏览器，可以获得更佳操作页面体验） 技术支持：小毛\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Row, Col } from 'antd';\r\nimport Header from './components/Header';\r\nimport NavLeft from './components/NavLeft';\r\nimport Footer from './components/Footer';\r\nimport './style/common.less'\r\n\r\n\r\nexport default class Admin extends Component {\r\n    render () {\r\n        return (\r\n            <Row className=\"container\">\r\n                <Col span=\"4\" className=\"nav-left\">\r\n                    <NavLeft></NavLeft>\r\n                </Col>\r\n                <Col span=\"20\" className=\"main\">\r\n                    <Header></Header>\r\n                    <Row className=\"content\">\r\n                        {/* <Home /> */}\r\n                        { this.props.children }\r\n                    </Row>\r\n                    <Footer></Footer>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './index.less'\r\n\r\nexport default class Home extends Component {\r\n    render () {\r\n        return (\r\n            <div className=\"home-wrap\">\r\n                欢迎来到小毛单车后台管理系统\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{ Component } from 'react'\r\nimport { Button,Card,Radio } from 'antd'\r\nimport './ui.less'\r\nconst ButtonGroup = Button.Group\r\n\r\nexport default class Buttons extends Component {\r\n\r\n    componentWillMount () {\r\n        this.setState( () => ({\r\n            loading: true,\r\n            size: 'default'\r\n        }))       \r\n    }\r\n\r\n\r\n    handleCloseLoading = () => {\r\n        this.setState( ()=> ({\r\n            loading: !this.state.loading\r\n        }))\r\n    }\r\n\r\n    handleChangeRadio = (e) => {\r\n        this.setState ( () => ({\r\n            size: e.target.value\r\n        }))\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <Card title=\"基础按钮\">\r\n                    <Button type=\"primary\">Xiaom</Button>\r\n                    <Button>Xiaom</Button>\r\n                    <Button type=\"dashed\">Xiaom</Button>\r\n                    <Button type=\"danger\">Xiaom</Button>\r\n                    <Button disabled>Xiaom</Button>\r\n                </Card>\r\n                <Card title=\"图形按钮\">\r\n                    <Button icon=\"plus\">创建</Button>\r\n                    <Button icon=\"edit\">编辑</Button>\r\n                    <Button icon=\"delete\">删除</Button>\r\n                    <Button shape=\"circle\" icon=\"search\"></Button>\r\n                    <Button type=\"primary\" icon=\"search\">搜索</Button>\r\n                    <Button type=\"primary\" icon=\"download\">下载</Button>\r\n                    <Button icon=\"apple\" shape=\"circle\"></Button>\r\n                </Card>  \r\n                <Card title=\"loading按钮\">\r\n                    <Button type=\"primary\" loading={this.state.loading}>确定</Button>\r\n                    <Button loading={this.state.loading}>确定</Button>\r\n                    <Button type=\"primary\" loading={this.state.loading}>点击加载</Button>\r\n                    <Button type=\"primary\" shape=\"circle\" loading={this.state.loading}></Button>\r\n                    <Button shape=\"circle\" loading={this.state.loading}></Button>\r\n                    <Button type=\"primary\" onClick={this.handleCloseLoading}>关闭</Button>\r\n                </Card>  \r\n                <Card title=\"按钮组\">\r\n                    <ButtonGroup>\r\n                        <Button icon=\"left\">返回</Button>\r\n                        <Button icon=\"right\">前进</Button>\r\n                    </ButtonGroup>\r\n                </Card> \r\n                <Card title=\"按钮尺寸\">\r\n                    <Radio.Group  value={this.state.size} onChange={this.handleChangeRadio}>\r\n                        <Radio value=\"small\">小</Radio>\r\n                        <Radio value=\"default\">中</Radio>\r\n                        <Radio value=\"large\">大</Radio>\r\n                    </Radio.Group>\r\n                    <Button type=\"primary\" size={this.state.size}>Xiaom</Button>\r\n                    <Button type=\"dashed\" size={this.state.size}>Xiaom</Button>\r\n                    <Button type=\"danger\" size={this.state.size}>Xiaom</Button>\r\n                    <Button size={this.state.size}>Xiaom</Button>\r\n                </Card>                                                             \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Card,Modal,Button } from 'antd'\r\n\r\nexport default class Modals extends Component {\r\n\r\n    componentWillMount () {\r\n        this.setState( () =>({\r\n            visible1: false,\r\n            visible2: false,\r\n            visible3: false,\r\n            visible4: false,\r\n            visible5: false,\r\n            visible6: false,\r\n            visible7: false,\r\n            visible8: false,            \r\n        }))\r\n    }\r\n\r\n    handleOk = (obj) => {\r\n        this.setState ( () => ({\r\n            [obj]: false\r\n        }))\r\n    }\r\n\r\n    handleCancle = (obj) => {\r\n        this.setState ( () => ({\r\n            [obj]: false\r\n        }))\r\n    }\r\n    \r\n    handleShow = (obj) => {\r\n        this.setState ( () => ({\r\n            [obj]: true\r\n        }))        \r\n    }\r\n\r\n    handleConfirm = (type) => {\r\n        Modal[type]({\r\n            title: '确认?',\r\n            content: '你确定你有学会东西么?',\r\n            onOk (){\r\n                console.log('点击OK')\r\n            },\r\n            onCancel (){\r\n                console.log('点击cancle')\r\n            }\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    title=\"Basic Modal\"\r\n                    visible={this.state.visible1}\r\n                    onOk={() =>this.handleOk('visible1')}\r\n                    onCancel={() => this.handleCancle('visible1')}                \r\n                >\r\n                    <p>Some contents...</p>\r\n                    <p>Some contents...</p>\r\n                    <p>Some contents...</p>\r\n                </Modal>\r\n                <Modal\r\n                    title=\"Basic Modal\"\r\n                    visible={this.state.visible2}\r\n                    okText=\"好的\"\r\n                    cancelText=\"算了\"\r\n                    onOk={() =>this.handleOk('visible2')}\r\n                    onCancel={() => this.handleCancle('visible2')}                \r\n                >\r\n                    <p>Some contents...</p>\r\n                    <p>Some contents...</p>\r\n                    <p>Some contents...</p>\r\n                </Modal> \r\n                <Modal\r\n                    title=\"Basic Modal\"\r\n                    style={{top: 20}}\r\n                    visible={this.state.visible3}\r\n                    onOk={() =>this.handleOk('visible3')}\r\n                    onCancel={() => this.handleCancle('visible3')}                \r\n                >\r\n                    <p>Some contents...</p>\r\n                    <p>Some contents...</p>\r\n                    <p>Some contents...</p>\r\n                </Modal>  \r\n                <Modal\r\n                    title=\"Basic Modal\"\r\n                    visible={this.state.visible4}\r\n                    centered\r\n                    onOk={() =>this.handleOk('visible4')}\r\n                    onCancel={() => this.handleCancle('visible4')}                \r\n                >\r\n                    <p>Some contents...</p>\r\n                    <p>Some contents...</p>\r\n                    <p>Some contents...</p>\r\n                </Modal>                                             \r\n                <Card title=\"基础模态框\">\r\n                    <Button onClick={() => {this.handleShow('visible1')}}>Open</Button>\r\n                    <Button onClick={() => {this.handleShow('visible2')}} type=\"primary\">自定义页脚</Button>\r\n                    <Button onClick={() => {this.handleShow('visible3')}} icon=\"plus\">顶部20px弹窗</Button>\r\n                    <Button onClick={() => {this.handleShow('visible4')}} type=\"danger\">水平垂直居中</Button>\r\n                </Card>  \r\n                <Card title=\"信息模态框\">\r\n                    <Button onClick={() => {this.handleConfirm('confirm')}}>Confirm</Button>\r\n                    <Button onClick={() => {this.handleConfirm('info')}} type=\"primary\">Info</Button>\r\n                    <Button onClick={() => {this.handleConfirm('success')}} icon=\"plus\">Success</Button>\r\n                    <Button onClick={() => {this.handleConfirm('warning')}} type=\"danger\">Warning</Button>\r\n                </Card>                 \r\n            </div>\r\n        )\r\n    }\r\n}","import React,{ Component } from 'react'\r\nimport { Card,Spin,Icon,Alert } from 'antd'\r\n\r\nexport default class Loading extends Component {\r\n    render () {\r\n        const icon = <Icon type=\"loading\" />\r\n        return (\r\n            <div>\r\n                <Card title=\"Spin用法\">\r\n                    <Spin size=\"small\" />\r\n                    <Spin />\r\n                    <Spin size=\"large\" />\r\n                    <Spin indicator={icon} size=\"large\" />\r\n                </Card>\r\n                <Card title=\"内容遮罩\">\r\n                    <Alert \r\n                        message=\"React\"\r\n                        description=\"React + antd\"\r\n                        type=\"info\"\r\n                    />\r\n                    <Alert \r\n                        message=\"React\"\r\n                        description=\"React + antd\"\r\n                        type=\"warning\"\r\n                    /> \r\n                    <Spin>\r\n                        <Alert \r\n                            message=\"React\"\r\n                            description=\"React + antd\"\r\n                            type=\"warning\"\r\n                        />                        \r\n                    </Spin> \r\n                    <Spin tip=\"加载中...\" indicator={icon}>\r\n                        <Alert \r\n                            message=\"React\"\r\n                            description=\"React + antd\"\r\n                            type=\"success\"\r\n                        />                        \r\n                    </Spin>                                      \r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{ Component } from 'react'\r\nimport { Card,Button,notification } from 'antd'\r\n\r\nexport default class Notice extends Component {\r\n\r\n    openNotification = () => {\r\n        notification.open({\r\n            message: 'Notification title',\r\n            description: 'This is content of the notification. this is a test content',\r\n            onClick: () => {\r\n                console.log('notification click')\r\n            }\r\n        })\r\n    }\r\n\r\n    openNotificationWithIcon = (type,direction) => {\r\n        if( direction) {\r\n            notification.config({\r\n                placement: direction\r\n            })\r\n\r\n        }\r\n        notification[type]({\r\n            message: 'With Icon Notification Title',\r\n            description: 'This is a test info Notification. The type is info and you will see a info Notification'\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n\r\n                <Card title=\"通知提醒框\">\r\n                    <Button type=\"primary\" onClick={this.openNotification}>Open the notification box</Button>\r\n                </Card>\r\n                <Card title=\"带图标的通知提醒框\">\r\n                    <Button type=\"primary\" onClick={() =>this.openNotificationWithIcon('info')}>Info notification</Button>\r\n                    <Button type=\"success\" onClick={() =>this.openNotificationWithIcon('success')}>Success notification</Button>\r\n                    <Button type=\"danger\" onClick={() =>this.openNotificationWithIcon('warning')}>Warning notification</Button>\r\n                    <Button type=\"error\" onClick={() =>this.openNotificationWithIcon('error')}>Error notification</Button>\r\n                </Card> \r\n                <Card title=\"通知提醒框控制方向\">\r\n                    <Button type=\"primary\" onClick={() =>this.openNotificationWithIcon('info','topLeft')}>Info topLeft notification</Button>\r\n                    <Button type=\"success\" onClick={() =>this.openNotificationWithIcon('success','topRight')}>Success topRight notification</Button>\r\n                    <Button type=\"danger\" onClick={() =>this.openNotificationWithIcon('warning','bottomLeft')}>Warning bottomLeft notification</Button>\r\n                    <Button type=\"error\" onClick={() =>this.openNotificationWithIcon('error','bottomRight')}>Error bottomRight notification</Button>\r\n                </Card>                                \r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","import React,{ Component } from 'react'\r\nimport { Card,Button,message } from 'antd'\r\n\r\nexport default class Message extends Component {\r\n\r\n    handleInfo = () => {\r\n        message.info('This is a normal information')\r\n    }\r\n\r\n    handleInfoType = (type) => {\r\n        message[type]('This is a prompt message for'+type+'and it will disappear in 5 seconds', 5);\r\n    }\r\n\r\n    handleLoadInfo = () => {\r\n        message.loading('Action in progress',2.5)\r\n                    .then(() => message.success('Action is success', 2.5))\r\n                    .then(() => message.info('Loading finished is finished',2.5))\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <Card title=\"全局消息框\">\r\n                    <Button type=\"primary\" onClick={this.handleInfo}>Display normal Message</Button>\r\n                </Card>\r\n                <Card title=\"全局消息框类型加时间\">\r\n                    <Button type=\"primary\" onClick={()=>this.handleInfoType('info')}>Display info Message</Button>\r\n                    <Button type=\"danger\" icon=\"plus\" onClick={()=>this.handleInfoType('success')}>Display success Message</Button>\r\n                    <Button type=\"dashed\" icon=\"download\" onClick={()=>this.handleInfoType('warning')}>Display warning Message</Button>\r\n                    <Button onClick={()=>this.handleInfoType('error')}>Display error Message</Button>\r\n                    <Button onClick={()=>this.handleInfoType('loading')}>Display loading Message</Button>\r\n                </Card> \r\n                <Card title=\"loading 全局消息框\">\r\n                    <Button icon=\"plus\" type=\"primary\" onClick={this.handleLoadInfo}>Display info Message</Button>\r\n                </Card>                                \r\n            </div>\r\n        )\r\n    }\r\n}","import React,{ Component } from 'react'\r\nimport { Card,Tabs,Icon,Radio } from 'antd'\r\nconst TabPane = Tabs.TabPane\r\n\r\nexport default class Tab extends Component{\r\n\r\n    newTabIndex = 0;\r\n    componentWillMount () {\r\n        const panes = [\r\n            {\r\n                title: 'tab 1',\r\n                content: 'content of tab 1',\r\n                key: '1',\r\n                closable: false\r\n            },\r\n            {\r\n                title: 'tab 2',\r\n                content: 'content of tab 2',\r\n                key: '2'\r\n            },\r\n            {\r\n                title: 'tab 3',\r\n                content: 'content of tab 3',\r\n                key: '3'\r\n                \r\n            }          \r\n        ]\r\n        this.setState({\r\n            activeKey: panes[0].key,\r\n            panes\r\n        })\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            mode: 'top'\r\n        }\r\n    }\r\n\r\n    handleTabClick = (key) => {\r\n        console.log(key)\r\n    }\r\n\r\n    handleModeChange = (e) => {\r\n        const mode = e.target.value\r\n        this.setState ( () => ({\r\n            mode\r\n        }))\r\n    }\r\n\r\n    onChange = (activeKey) => {\r\n        this.setState({\r\n            activeKey\r\n        })\r\n    }\r\n\r\n    onEdit = (targetKey,action) => {\r\n        this[action](targetKey);\r\n    }\r\n\r\n    add = () => {\r\n        const panes = this.state.panes;\r\n        const activeKey = `newTab${this.newTabIndex++}`;\r\n        panes.push({ title: 'New Tab', content: 'Content of new Tab', key: activeKey });\r\n        this.setState({ panes, activeKey });\r\n    }\r\n\r\n    remove = (targetKey) => {\r\n        let activeKey = this.state.activeKey;\r\n        let lastIndex;\r\n        this.state.panes.forEach((pane, i) => {\r\n          if (pane.key === targetKey) {\r\n            lastIndex = i - 1;\r\n          }\r\n        })\r\n        const panes = this.state.panes.filter(pane => pane.key !== targetKey);\r\n        if (lastIndex >= 0 && activeKey === targetKey) {\r\n            activeKey = panes[lastIndex].key;\r\n        }\r\n        this.setState({ panes, activeKey });    \r\n    }   \r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <Card title=\"tabs展示——默认选中第一项\">\r\n                    <Tabs defaultActiveKey=\"1\" onChange={this.handleTabClick}>\r\n                        <TabPane tab=\"Tab 1\" key=\"1\">content of tab 1</TabPane>\r\n                        <TabPane tab=\"Tab 2\" key=\"2\">content of tab 2</TabPane>\r\n                        <TabPane tab=\"Tab 3\" key=\"3\">content of tab 3</TabPane>\r\n                    </Tabs>\r\n                </Card>\r\n                <Card title=\"tabs展示——禁用某一项\">\r\n                    <Tabs defaultActiveKey=\"1\" onChange={this.handleTabClick}>\r\n                        <TabPane tab=\"Tab 1\" key=\"1\">content of tab 1</TabPane>\r\n                        <TabPane tab=\"Tab 2\" disabled key=\"2\">content of tab 2</TabPane>\r\n                        <TabPane tab=\"Tab 3\" key=\"3\">content of tab 3</TabPane>\r\n                    </Tabs>\r\n                </Card> \r\n                <Card title=\"tabs展示——带图标的\">\r\n                    <Tabs defaultActiveKey=\"2\" onChange={this.handleTabClick}>\r\n                        <TabPane tab={<span><Icon type=\"apple\" />tab 1</span>} key=\"1\">content of tab 1</TabPane>\r\n                        <TabPane tab={<span><Icon type=\"android\"/>tab 2</span>} key=\"2\">content of tab 2</TabPane>\r\n                        <TabPane tab={<span><Icon type=\"plus\"/>tab 3</span>} key=\"3\">content of tab 3</TabPane>\r\n                    </Tabs>\r\n                </Card> \r\n                <Card title=\"tabs展示——上下、左右滑动\">\r\n                    <Radio.Group onChange={this.handleModeChange} value={this.state.mode} style={{marginBottom: 8}}>\r\n                        <Radio.Button value=\"top\">top</Radio.Button>\r\n                        <Radio.Button value=\"left\">left</Radio.Button>\r\n                        <Radio.Button value=\"right\">right</Radio.Button>\r\n                        <Radio.Button value=\"bottom\">bottom</Radio.Button>\r\n                    </Radio.Group>\r\n                    <Tabs defaultActiveKey=\"2\" \r\n                        onChange={this.handleTabClick}\r\n                        tabPosition={this.state.mode}\r\n                        style={{height:220}}\r\n                    >\r\n                        <TabPane tab=\"tab 1\" key=\"1\">content of tab 1</TabPane>\r\n                        <TabPane tab=\"tab 2\" key=\"2\">content of tab 2</TabPane>\r\n                        <TabPane tab=\"tab 3\" key=\"3\">content of tab 3</TabPane>\r\n                        <TabPane tab=\"tab 4\" key=\"4\">content of tab 4</TabPane>\r\n                        <TabPane tab=\"tab 5\" key=\"5\">content of tab 5</TabPane>\r\n                        <TabPane tab=\"tab 6\" key=\"6\">content of tab 6</TabPane>\r\n                        <TabPane tab=\"tab 7\" key=\"7\">content of tab 7</TabPane>\r\n                        <TabPane tab=\"tab 8\" key=\"8\">content of tab 8</TabPane>\r\n                        <TabPane tab=\"tab 9\" key=\"9\">content of tab 9</TabPane>\r\n                        <TabPane tab=\"tab 10\" key=\"10\">content of tab 10</TabPane>\r\n                    </Tabs>\r\n                </Card>\r\n                <Card title=\"tabs展示——添加、删除\">\r\n                    <Tabs defaultActiveKey=\"2\" \r\n                        onChange={this.onChange}\r\n                        activeKey={this.state.activeKey}\r\n                        type=\"editable-card\"\r\n                        onEdit={this.onEdit}\r\n                    >\r\n                        {\r\n                            this.state.panes.map( (item) => {\r\n                                return (\r\n                                    <TabPane tab={item.title} key={item.key} closable={item.closable}>{item.content}</TabPane>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Tabs>\r\n                </Card>                                                              \r\n            </div>\r\n        )\r\n    }\r\n}","import React,{ Component } from 'react'\r\nimport { Card,Row,Col,Modal } from 'antd'\r\n\r\nexport default class Gallery extends Component {\r\n\r\n    state = {\r\n        visible: false\r\n    }\r\n\r\n    handleShowImg = (imgSrc) => {\r\n        this.setState({\r\n            visible: true,\r\n            currentImg: '/gallery/'+imgSrc\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const imgs = [\r\n            ['1.png','2.png','3.png','4.png','5.png'],\r\n            ['6.png','7.png','8.png','9.png','10.png'],\r\n            ['11.png','12.png','13.png','14.png','5.png'],\r\n            ['16.png','17.png','18.png','19.png','20.png'],\r\n            ['21.png','22.png','23.png','24.png','25.png']\r\n        ]  \r\n\r\n        const imgList = imgs.map(list => list.map(item => {\r\n            return (\r\n                <Card cover={<img src={'/gallery/'+item} alt=\"gallery\" />} onClick={()=>this.handleShowImg(item)}>\r\n                    <Card.Meta title=\"React Admin\" description=\"This is react test program\" />\r\n                </Card>\r\n            )\r\n        }))\r\n\r\n        return (\r\n            <div>\r\n                <Row gutter={10}>\r\n                    <Col md={5}>\r\n                        {imgList[0]}\r\n                    </Col>\r\n                    <Col md={5}>\r\n                        {imgList[1]}\r\n                    </Col>\r\n                    <Col md={5}>\r\n                        {imgList[2]}\r\n                    </Col>\r\n                    <Col md={5}>\r\n                        {imgList[3]}\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        {imgList[4]}\r\n                    </Col>                                                                                \r\n                </Row>\r\n                <Modal\r\n                    width={300}\r\n                    height={500}\r\n                    visible={this.state.visible}\r\n                    title=\"图片画廊\"\r\n                    onCancel= {()=>{\r\n                        this.setState({\r\n                            visible:false\r\n                        })\r\n                    }}\r\n                    footer={null}\r\n                >\r\n                    {<img src={this.state.currentImg} alt=\"点击图片\"/>}\r\n                </Modal>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","import React,{ Component } from 'react'\r\nimport { Card,Carousel }  from 'antd'\r\n\r\nexport default class Carousels extends Component {\r\n\r\n    handleAfterChange = (a,b,c) => {\r\n        console.log(a,b,c)\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <Card title=\"文字轮播\">\r\n                    <Carousel afterChange={this.handleAfterChange}>\r\n                        <div><h3>1</h3></div>\r\n                        <div><h3>2</h3></div>\r\n                        <div><h3>3</h3></div>\r\n                        <div><h3>4</h3></div>\r\n                    </Carousel>\r\n                </Card>\r\n                <Card title=\"图片轮播\">\r\n                    <Carousel autoplay effect=\"fade\">\r\n                        <div>\r\n                            <img src=\"/carousel-img/carousel-1.jpg\" alt=\"carousel1\" />\r\n                        </div>\r\n                        <div>\r\n                            <img src=\"/carousel-img/carousel-2.jpg\" alt=\"carousel2\" />\r\n                        </div>\r\n                        <div>\r\n                            <img src=\"/carousel-img/carousel-3.jpg\" alt=\"carousel3\" />\r\n                        </div>\r\n                    </Carousel>\r\n                </Card>    \r\n                <Card title=\"垂直显示\">\r\n                    <Carousel vertical>\r\n                        <div><h3>1</h3></div>\r\n                        <div><h3>2</h3></div>\r\n                        <div><h3>3</h3></div>\r\n                        <div><h3>4</h3></div>\r\n                    </Carousel>\r\n                </Card>\r\n                <Card title=\"切换效果渐显\">\r\n                    <Carousel effect=\"fade\">\r\n                        <div><h3>1</h3></div>\r\n                        <div><h3>2</h3></div>\r\n                        <div><h3>3</h3></div>\r\n                        <div><h3>4</h3></div>\r\n                    </Carousel>\r\n                </Card>  \r\n                <Card title=\"定时切换\">\r\n                    <Carousel autoplay effect=\"fade\">\r\n                        <div><h3>1</h3></div>\r\n                        <div><h3>2</h3></div>\r\n                        <div><h3>3</h3></div>\r\n                        <div><h3>4</h3></div>\r\n                    </Carousel>\r\n                </Card>                       \r\n            </div>\r\n        )\r\n    }\r\n}","import React,{ Component } from 'react'\r\nimport { Card,Form,Input,Button,message,Icon, Checkbox } from 'antd'\r\nconst FormItem = Form.Item\r\n\r\nclass Login extends Component {\r\n\r\n    handleSubmit = () => {\r\n        const userInfo = this.props.form.getFieldsValue();\r\n        this.props.form.validateFields((err,values) => {\r\n            if(!err){\r\n                message.success(`${values.userName}，恭喜您，验证通过了。请牢记您的密码${values.passWord}`)\r\n            }\r\n        });\r\n        console.log(userInfo);\r\n    }\r\n\r\n    render () {\r\n        const { getFieldDecorator } = this.props.form\r\n        return (\r\n            <div>\r\n                <Card title=\"基础行内form\">\r\n                    <Form layout=\"inline\">\r\n                        <FormItem>\r\n                            <Input placeholder=\"请输入用户名\" />\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Input placeholder=\"请输入密码\" />\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button type=\"primary\">登录</Button>\r\n                        </FormItem>                                                \r\n                    </Form>\r\n                </Card>\r\n                <Card title=\"基础水平form\">\r\n                    <Form style={{width:300}}>\r\n                        <FormItem>\r\n                            {\r\n                                getFieldDecorator('userName',{\r\n                                    initialValue: '',\r\n                                    rules: [\r\n                                        {required: true,message: 'please input your username'},\r\n                                        {min: 5,max:10,message: '长度不在范围内'}\r\n                                    ]\r\n                                })(\r\n                                    <Input prefix={<Icon type=\"user\" />} placeholder=\"请输入用户名\" />\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                getFieldDecorator('passWord',{\r\n                                    rules: [{required: true,message: 'please input your password'}]\r\n                                })(\r\n                                    <Input prefix={<Icon type=\"lock\" />} placeholder=\"请输入密码\" />\r\n                                )\r\n                            }                            \r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {\r\n                                getFieldDecorator('remember',{\r\n                                    valuePropName: 'checked',\r\n                                    initialValue: true\r\n                                })(\r\n                                    <Checkbox>记住密码</Checkbox>\r\n                                )\r\n                            }   \r\n                            <a href=\"http://www.baidu.com\" style={{float:\"right\"}}>忘记密码</a>                         \r\n                        </FormItem>                        \r\n                        <FormItem>\r\n                            <Button type=\"primary\" onClick={this.handleSubmit}>登录</Button>\r\n                        </FormItem>                                                \r\n                    </Form>\r\n                </Card>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(Login);","import React,{ Component } from 'react'\r\nimport { message,Form,Card,Button,Input,Checkbox, Radio, InputNumber, Select, option, Switch, DatePicker, TimePicker, Upload, Icon } from 'antd'\r\nimport moment from 'moment'\r\n\r\nconst FormItem = Form.Item\r\nconst TextArea = Input.TextArea\r\n\r\nclass Regist extends Component {\r\n    state ={}\r\n\r\n    handleSubmit = () => {\r\n        const registInfo = this.props.form.getFieldsValue();\r\n        console.log(JSON.stringify(registInfo));\r\n        message.success(`${registInfo.userName}，恭喜您，注册成功了。请牢记您的密码${registInfo.userPwd}`)\r\n    }\r\n\r\n    render () {\r\n\r\n        const { getFieldDecorator } = this.props.form\r\n        const formItemLabel = {\r\n            labelCol: {\r\n                xs: 24,\r\n                sm: 4\r\n            },\r\n            wrapperCol: {\r\n                xs: 24,\r\n                sm: 12\r\n            }\r\n        }\r\n        const offsetLayout = {\r\n            wrapperCol: {\r\n                xs: 24,\r\n                sm: {\r\n                    span: 12,\r\n                    offset: 4\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <Card title=\"注册Form\">\r\n                    <Form>\r\n                        <FormItem label=\"用户名\" {...formItemLabel}>\r\n                            {\r\n                                getFieldDecorator('userName',{\r\n                                    rules: [{required: true,message: 'please input your username'}]\r\n                                })(\r\n                                    <Input placeholder=\"请输入用户名\"/>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"密码\" {...formItemLabel}>\r\n                            {\r\n                                getFieldDecorator('userPwd',{\r\n                                    rules: [{required: true,message: 'please input your user password'}]\r\n                                })(\r\n                                    <Input type=\"password\" placeholder=\"请输入用户密码\"/>\r\n                                )\r\n                            }\r\n                        </FormItem>  \r\n                        <FormItem label=\"性别\" {...formItemLabel}>\r\n                            {\r\n                                getFieldDecorator('sex',{\r\n                                    initialValue: '0'\r\n                                })(\r\n                                    <Radio.Group>\r\n                                        <Radio value=\"0\">男</Radio>\r\n                                        <Radio value=\"1\">女</Radio>\r\n                                    </Radio.Group>\r\n                                )\r\n                            }\r\n                        </FormItem> \r\n                        <FormItem label=\"年龄\" {...formItemLabel}>\r\n                            {\r\n                                getFieldDecorator('age',{\r\n                                    initialValue: 18\r\n                                })(\r\n                                    <InputNumber />\r\n                                )\r\n                            }\r\n                        </FormItem>  \r\n                        <FormItem label=\"当前状态\" {...formItemLabel}>\r\n                            {\r\n                                getFieldDecorator('state',{\r\n                                    initialValue: \"2\"\r\n                                })(\r\n                                    <Select>\r\n                                        <option value=\"1\">一条咸鱼</option>\r\n                                        <option value=\"2\">浪子回头</option>\r\n                                        <option value=\"3\">鸣人</option>\r\n                                        <option value=\"4\">佐助</option>\r\n                                        <option value=\"5\">路飞</option>\r\n                                    </Select>\r\n                                )\r\n                            }\r\n                        </FormItem>  \r\n                        <FormItem label=\"爱好\" {...formItemLabel}>\r\n                            {\r\n                                getFieldDecorator('interest',{\r\n                                    initialValue: [\"2\",\"5\"]\r\n                                })(\r\n                                    <Select mode=\"multiple\">\r\n                                        <option value=\"1\">游泳</option>\r\n                                        <option value=\"2\">跑步</option>\r\n                                        <option value=\"3\">爬山</option>\r\n                                        <option value=\"4\">遛狗</option>\r\n                                        <option value=\"5\">羽毛球</option>\r\n                                        <option value=\"6\">骑行</option>\r\n                                        <option value=\"7\">桌球</option>\r\n                                        <option value=\"8\">网球</option>\r\n                                    </Select>\r\n                                )\r\n                            }\r\n                        </FormItem> \r\n                        <FormItem label=\"是否已婚\" {...formItemLabel}>\r\n                            {\r\n                                getFieldDecorator('isMarried',{\r\n                                    valuePropName: 'checked',\r\n                                    initialValue: true\r\n                                })(\r\n                                    <Switch/>\r\n                                )\r\n                            }\r\n                        </FormItem>   \r\n                        <FormItem label=\"生日\" {...formItemLabel}>\r\n                            {\r\n                                getFieldDecorator('birthDate',{\r\n                                    initialValue: moment('2018-10-24')\r\n                                })(\r\n                                    <DatePicker showTime format=\"YYYY-MM-DD\" />\r\n                                )\r\n                            }\r\n                        </FormItem>  \r\n                        <FormItem label=\"联系地址\" {...formItemLabel}>\r\n                            {\r\n                                getFieldDecorator('address',{\r\n                                    initialValue: '湖南省长沙市芙蓉区'\r\n                                })(\r\n                                    <TextArea autosize={ {minRows:2,maxRows:4} } />\r\n                                )\r\n                            }\r\n                        </FormItem> \r\n                        <FormItem label=\"早起时间\" {...formItemLabel}>\r\n                            {\r\n                                getFieldDecorator('time',{\r\n                                    initialValue: ''\r\n                                })(\r\n                                    <TimePicker />\r\n                                )\r\n                            }\r\n                        </FormItem>  \r\n                        <FormItem label=\"头像\" {...formItemLabel}>\r\n                            {\r\n                                getFieldDecorator('userImg',{\r\n                                    initialValue: ''\r\n                                })(\r\n                                    <Upload \r\n                                        listType=\"picture-card\"\r\n                                        showUploadList={false}\r\n                                        action=\"//jsonplaceholder.typicode.com/posts/\"\r\n                                        >\r\n                                        {this.state.userImg? <img src={this.state.userImg} alt=\"userImg\"/> : <Icon type=\"plus\"/>}\r\n                                    </Upload>\r\n                                )\r\n                            }\r\n                        </FormItem> \r\n                        <FormItem {...offsetLayout}>\r\n                            {\r\n                                getFieldDecorator('hasRead',{\r\n                                    valuePropName: 'checked',\r\n                                    initialValue: true\r\n                                })(\r\n                                    <Checkbox>已阅读协议并同意<a href=\"http://www.baidu.com\">必读协议</a></Checkbox>\r\n                                )\r\n                            }\r\n                        </FormItem>   \r\n                        <FormItem {...offsetLayout}>\r\n                            {\r\n                                getFieldDecorator('hasRead',{\r\n                                })(\r\n                                    <Button type=\"primary\" onClick={this.handleSubmit}>注册</Button>\r\n                                )\r\n                            }\r\n                        </FormItem>                                                                                                                                                                                                                                                                                  \r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(Regist);","import React,{ Component } from 'react';\r\nimport { Table,Card,Tag,Modal,Button,message }  from 'antd'\r\nimport axios from './../../axios'\r\nimport Util from './../../utils/utils'\r\n\r\nexport default class basicTable extends Component {\r\n\r\n    state = {\r\n        dataSource1: []\r\n    } // 下面的this.setState设置的值用到的时候报错null\r\n\r\n    params = {\r\n        page: 1\r\n    }\r\n\r\n    request = () => {\r\n        let _this = this\r\n        axios.ajax({\r\n            url: '/table/list',\r\n            data: {\r\n                params: {\r\n                    page: this.params.page\r\n                }\r\n            }\r\n        }).then( (res) => {\r\n            if( res.code === 200 ){\r\n                res.result.list.map( (item,index) => {\r\n                    item.key = index\r\n                    return item\r\n                })\r\n                this.setState({\r\n                    dataSource1: res.result.list,\r\n                    selectedRowKeys: [],\r\n                    selectedRows: null,\r\n                    pagination: Util.pagination(res,(current)=>{\r\n                        //to-do\r\n                        _this.params.page = current;\r\n                        _this.request();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleRowClick = (record,index) => {\r\n        let selectKey = [index];\r\n        Modal.info({\r\n            title: '信息',\r\n            content: `用户名:${record.name},用户爱好:${record.interest}`\r\n        })\r\n        this.setState({\r\n            selectedRowKeys: selectKey,\r\n            selectedItem: record\r\n        })\r\n    }\r\n\r\n    handleBtnClick = () => {\r\n        let rows = this.state.selectedRows\r\n        console.log(rows);\r\n        let ids = [];\r\n        rows.map( item => {\r\n            ids.push(item.id)\r\n            return ids\r\n        })\r\n        Modal.confirm({\r\n            title: '提示',\r\n            content: `确定要删除该列数据么？${ids.join(',')}`,\r\n            onOk: ()=>{\r\n                message.success('删除成功');\r\n                this.request();\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount () {\r\n        const dataSource = [\r\n            {\r\n                id: 1,\r\n                name: 'Xiaom',\r\n                sex: '男',\r\n                address: '湖南省长沙市',\r\n                state: '乐观向上',\r\n                interest: ['study','dongman'],\r\n                birthdate: '10-24'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Xiaox',\r\n                sex: '女',\r\n                address: '湖南省张家界市',\r\n                state: '乐观向上',\r\n                interest: ['play'],\r\n                birthdate: '10-01'\r\n            }, \r\n            {\r\n                id: 3,\r\n                name: 'Sangni',\r\n                sex: '男',\r\n                address: '湖南省长沙市',\r\n                state: '贪吃',\r\n                interest: ['Eat'],\r\n                birthdate: '07-19'\r\n            }, \r\n            {\r\n                id: 4,\r\n                name: 'Paofu',\r\n                sex: '女',\r\n                address: '湖南省长沙市',\r\n                state: '贪吃',\r\n                interest: ['Eat'],\r\n                birthdate: '08-01'\r\n            }                                 \r\n        ]\r\n        this.setState({\r\n            dataSource\r\n        })\r\n        this.request();\r\n    }\r\n\r\n    render () {\r\n        const { selectedRowKeys } = this.state\r\n        const rowSelection = {\r\n            type: 'radio',\r\n            selectedRowKeys\r\n        }\r\n        const rowCheckSelection = {\r\n            type: 'checkbox',\r\n            selectedRowKeys,\r\n            onChange: (selectedRowKeys,selectedRows) => {\r\n               this.setState({\r\n                   selectedRowKeys,\r\n                   selectedRows\r\n               }) \r\n            }            \r\n        }\r\n        const columns = [\r\n            {\r\n                title: 'Id',\r\n                dataIndex: 'id',\r\n                key: 'id'\r\n            },\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                key: 'name'\r\n            },\r\n            {\r\n                title: 'Sex',\r\n                dataIndex: 'sex',\r\n                key: 'sex',\r\n                render: (sex => {\r\n                    return sex === 1 ? '男' : '女'\r\n                })\r\n            },\r\n            {\r\n                title: 'Address',\r\n                dataIndex: 'address',\r\n                key: 'address'\r\n            },\r\n            {\r\n                title: 'State',\r\n                dataIndex: 'state',\r\n                key: 'state',\r\n                render: (state => {\r\n                    let config = {\r\n                        \"1\": '好好学习',\r\n                        \"2\": \"天天向上\",\r\n                        \"3\": \"积极乐观\",\r\n                        \"4\": \"爱好运动\",\r\n                        \"5\": \"沉迷游戏\",\r\n                        \"6\": \"热爱动漫\",\r\n                        \"7\": \"自怨自艾\",\r\n                        \"8\": \"不知所云\"\r\n                    }\r\n                    return config[state]\r\n                })\r\n            },\r\n            {\r\n                title: 'Interest',\r\n                dataIndex: 'interest',\r\n                key: 'interest',\r\n                render: (interest => {\r\n                    let config = {\r\n                        \"1\": '动漫',\r\n                        \"2\": \"网球\",\r\n                        \"3\": \"跑步\",\r\n                        \"4\": \"遛狗\",\r\n                        \"5\": \"足球\",\r\n                        \"6\": \"手游\",\r\n                        \"7\": \"听音乐\",\r\n                        \"8\": \"台球\"\r\n                    }\r\n                    return (\r\n                        <span>\r\n                            { <Tag color=\"blue\" key={config[interest]}>{config[interest]}</Tag> }\r\n                        </span>\r\n                    )                  \r\n\r\n                })\r\n\r\n            },            \r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate'\r\n            }                        \r\n        ]\r\n\r\n        return(\r\n            <div>\r\n                <Card title=\"基础表格\">\r\n                    <Table \r\n                        columns={ columns }\r\n                        dataSource={ this.state.dataSource }\r\n                    />\r\n                </Card>\r\n                <Card title=\"带边框的基础表格\">\r\n                    <Table \r\n                        bordered\r\n                        columns={ columns }\r\n                        dataSource={ this.state.dataSource }\r\n                    />\r\n                </Card>  \r\n                <Card title=\"隐藏分页带边框的基础表格\">\r\n                    <Table \r\n                        bordered\r\n                        columns={ columns }\r\n                        dataSource={ this.state.dataSource }\r\n                        pagination={ false }\r\n                    />\r\n                </Card> \r\n                <Card title=\"动态数据渲染表格\">\r\n                    <Table \r\n                        columns={ columns }\r\n                        dataSource={ this.state.dataSource1 }\r\n                    />\r\n                </Card> \r\n                <Card title=\"Mock-单选表格\">\r\n                    <Table \r\n                        columns={ columns }\r\n                        rowSelection={ rowSelection }\r\n                        dataSource={ this.state.dataSource1 }\r\n                        onRow={(record,index) => {\r\n                            return {\r\n                              onClick: () => {\r\n                                  this.handleRowClick(record,index)\r\n                              },       // 点击行\r\n                            };\r\n                          }}                        \r\n                    />\r\n                </Card>  \r\n                <Card title=\"Mock-复选表格\">\r\n                    <Button icon=\"delete\" type=\"delete\" onClick={this.handleBtnClick}>删除</Button>\r\n                    <Table \r\n                        columns={ columns }\r\n                        rowSelection={ rowCheckSelection }\r\n                        dataSource={ this.state.dataSource1 }\r\n/*                         onRow={(record,index) => {\r\n                            return {\r\n                              onClick: () => {\r\n                                  this.handleRowClick(record,index)\r\n                              },       // 点击行\r\n                            };\r\n                        }}  */                       \r\n                    />\r\n                </Card> \r\n                <Card title=\"Mock-表格分页\">\r\n                    <Table \r\n                        bordered\r\n                        columns={ columns }\r\n                        dataSource={ this.state.dataSource1 }\r\n                        pagination={this.state.pagination}\r\n                    />\r\n                </Card>                                                                                           \r\n            </div>\r\n        )\r\n    }\r\n}","import React,{ Component } from 'react'\r\nimport { Card,Table,Tag, Badge,Button, Modal, message } from 'antd'\r\nimport axios from './../../axios'\r\n\r\nexport default class High extends Component {\r\n    state = {}\r\n\r\n    params = {\r\n        page: 1\r\n    }\r\n\r\n    request = () => {\r\n        axios.ajax({\r\n            url: '/table/high/list',\r\n            data: {\r\n                params: {\r\n                    page: this.params.page\r\n                }\r\n            }\r\n        }).then( (res) => {\r\n            if( res.code === 200 ){\r\n                res.result.list.map( (item,index) => {\r\n                    item.key = index\r\n                    return item\r\n                })\r\n                this.setState({\r\n                    dataSource1: res.result.list,\r\n                    selectedRowKeys: [],\r\n                    selectedRows: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.request()\r\n    }\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        console.log(sorter.order)\r\n        this.setState({\r\n            sortOrder: sorter.order\r\n        })\r\n    }\r\n\r\n    handleBtnDelete = (item) => {\r\n        // let id = item.id;\r\n        Modal.confirm({\r\n            title: '确认',\r\n            content: '确认删除该条数据？',\r\n            onOk: ()=>{\r\n                message.success('删除成功');\r\n                this.request();\r\n            }\r\n        })\r\n    }\r\n\r\n    render () {\r\n\r\n        const columns = [\r\n            {\r\n                title: 'Id',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                width: 80\r\n            },\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                width: 80\r\n            },\r\n            {\r\n                title: 'Sex',\r\n                dataIndex: 'sex',\r\n                key: 'sex',\r\n                render: (sex => {\r\n                    return sex === 1 ? '男' : '女'\r\n                }),\r\n                width: 80\r\n            },\r\n            {\r\n                title: 'Address',\r\n                dataIndex: 'address',\r\n                key: 'address',\r\n                width: 120\r\n            },\r\n            {\r\n                title: 'State',\r\n                dataIndex: 'state',\r\n                key: 'state',\r\n                render: (state => {\r\n                    let config = {\r\n                        \"1\": '好好学习',\r\n                        \"2\": \"天天向上\",\r\n                        \"3\": \"积极乐观\",\r\n                        \"4\": \"爱好运动\",\r\n                        \"5\": \"沉迷游戏\",\r\n                        \"6\": \"热爱动漫\",\r\n                        \"7\": \"自怨自艾\",\r\n                        \"8\": \"不知所云\"\r\n                    }\r\n                    return config[state]\r\n                }),\r\n                width: 80\r\n            },\r\n            {\r\n                title: 'Interest',\r\n                dataIndex: 'interest',\r\n                key: 'interest',\r\n                render: (interest => {\r\n                    let config = {\r\n                        \"1\": '动漫',\r\n                        \"2\": \"网球\",\r\n                        \"3\": \"跑步\",\r\n                        \"4\": \"遛狗\",\r\n                        \"5\": \"足球\",\r\n                        \"6\": \"手游\",\r\n                        \"7\": \"听音乐\",\r\n                        \"8\": \"台球\"\r\n                    }\r\n                    return (\r\n                        <span>\r\n                            { <Tag color=\"blue\" key={config[interest]}>{config[interest]}</Tag> }\r\n                        </span>\r\n                    )                  \r\n\r\n                }),\r\n                width: 80\r\n\r\n            },            \r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate',\r\n                width: 120\r\n            }                        \r\n        ]\r\n\r\n        const columns2 = [\r\n            {\r\n                title: 'Id',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                fixed: 'left',\r\n                width: 80\r\n            },\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                fixed: 'left',\r\n                width: 80\r\n            },\r\n            {\r\n                title: 'Sex',\r\n                dataIndex: 'sex',\r\n                key: 'sex',\r\n                render: (sex => {\r\n                    return sex === 1 ? '男' : '女'\r\n                }),\r\n                width: 80\r\n            },\r\n            {\r\n                title: 'Address',\r\n                dataIndex: 'address',\r\n                key: 'address',\r\n                width: 120\r\n            },\r\n            {\r\n                title: 'State',\r\n                dataIndex: 'state',\r\n                key: 'state',\r\n                render: (state => {\r\n                    let config = {\r\n                        \"1\": '好好学习',\r\n                        \"2\": \"天天向上\",\r\n                        \"3\": \"积极乐观\",\r\n                        \"4\": \"爱好运动\",\r\n                        \"5\": \"沉迷游戏\",\r\n                        \"6\": \"热爱动漫\",\r\n                        \"7\": \"自怨自艾\",\r\n                        \"8\": \"不知所云\"\r\n                    }\r\n                    return config[state]\r\n                }),\r\n                width: 80\r\n            },\r\n            {\r\n                title: 'Interest',\r\n                dataIndex: 'interest',\r\n                key: 'interest',\r\n                render: (interest => {\r\n                    let config = {\r\n                        \"1\": '动漫',\r\n                        \"2\": \"网球\",\r\n                        \"3\": \"跑步\",\r\n                        \"4\": \"遛狗\",\r\n                        \"5\": \"足球\",\r\n                        \"6\": \"手游\",\r\n                        \"7\": \"听音乐\",\r\n                        \"8\": \"台球\"\r\n                    }\r\n                    return (\r\n                        <span>\r\n                            { <Tag color=\"blue\" key={config[interest]}>{config[interest]}</Tag> }\r\n                        </span>\r\n                    )                  \r\n\r\n                }),\r\n                width: 80\r\n\r\n            },            \r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate',\r\n                width: 120\r\n            },\r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate',\r\n                width: 120\r\n            },\r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate',\r\n                width: 120\r\n            },\r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate',\r\n                width: 120\r\n            },\r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate',\r\n                width: 120\r\n            },\r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate',\r\n                width: 120\r\n            },\r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate',\r\n                width: 120\r\n            },\r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate',\r\n                width: 120\r\n            },\r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate',\r\n                width: 120\r\n            },\r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate',\r\n                width: 120\r\n            },\r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate',\r\n                width: 120\r\n            },\r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate',\r\n                width: 120\r\n            },\r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate',\r\n                width: 120\r\n            },\r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate',\r\n                fixed: 'right',\r\n                width: 120\r\n            }\r\n        ]        \r\n\r\n        const columns3 = [\r\n            {\r\n                title: 'Id',\r\n                dataIndex: 'id',\r\n                key: 'id'\r\n            },\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                key: 'name'\r\n            },\r\n            {\r\n                title: 'Age',\r\n                dataIndex: 'age',\r\n                key: 'age',\r\n                sorter: (a,b) => {\r\n                    return a.age - b.age\r\n                },\r\n                sortOrder: this.state.sortOrder\r\n            },            \r\n            {\r\n                title: 'Sex',\r\n                dataIndex: 'sex',\r\n                key: 'sex',\r\n                render: (sex => {\r\n                    return sex === 1 ? '男' : '女'\r\n                })\r\n            },\r\n            {\r\n                title: 'Address',\r\n                dataIndex: 'address',\r\n                key: 'address'\r\n            },\r\n            {\r\n                title: 'State',\r\n                dataIndex: 'state',\r\n                key: 'state',\r\n                render: (state => {\r\n                    let config = {\r\n                        \"1\": '好好学习',\r\n                        \"2\": \"天天向上\",\r\n                        \"3\": \"积极乐观\",\r\n                        \"4\": \"爱好运动\",\r\n                        \"5\": \"沉迷游戏\",\r\n                        \"6\": \"热爱动漫\",\r\n                        \"7\": \"自怨自艾\",\r\n                        \"8\": \"不知所云\"\r\n                    }\r\n                    return config[state]\r\n                })\r\n            },\r\n            {\r\n                title: 'Interest',\r\n                dataIndex: 'interest',\r\n                key: 'interest',\r\n                render: (interest => {\r\n                    let config = {\r\n                        \"1\": '动漫',\r\n                        \"2\": \"网球\",\r\n                        \"3\": \"跑步\",\r\n                        \"4\": \"遛狗\",\r\n                        \"5\": \"足球\",\r\n                        \"6\": \"手游\",\r\n                        \"7\": \"听音乐\",\r\n                        \"8\": \"台球\"\r\n                    }\r\n                    return (\r\n                        <span>\r\n                            { <Tag color=\"blue\" key={config[interest]}>{config[interest]}</Tag> }\r\n                        </span>\r\n                    )                  \r\n\r\n                })\r\n\r\n            },            \r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate'\r\n            }                        \r\n        ]  \r\n        const columns4 = [\r\n            {\r\n                title: 'Id',\r\n                dataIndex: 'id'\r\n            },\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name'\r\n            },\r\n            {\r\n                title: 'Age',\r\n                dataIndex: 'age'\r\n            },            \r\n            {\r\n                title: 'Sex',\r\n                dataIndex: 'sex',\r\n                render: (sex => {\r\n                    return sex === 1 ? '男' : '女'\r\n                })\r\n            },\r\n            {\r\n                title: 'Address',\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title: 'State',\r\n                dataIndex: 'state',\r\n                render: (state => {\r\n                    let config = {\r\n                        \"1\": '好好学习',\r\n                        \"2\": \"天天向上\",\r\n                        \"3\": \"积极乐观\",\r\n                        \"4\": \"爱好运动\",\r\n                        \"5\": \"沉迷游戏\",\r\n                        \"6\": \"热爱动漫\",\r\n                        \"7\": \"自怨自艾\",\r\n                        \"8\": \"不知所云\"\r\n                    }\r\n                    return (\r\n                        <span><Badge status=\"success\"/>{config[state]}</span>\r\n                    )\r\n                })\r\n            },\r\n            {\r\n                title: 'Interest',\r\n                dataIndex: 'interest',\r\n                render: (interest => {\r\n                    let config = {\r\n                        \"1\": '动漫',\r\n                        \"2\": \"网球\",\r\n                        \"3\": \"跑步\",\r\n                        \"4\": \"遛狗\",\r\n                        \"5\": \"足球\",\r\n                        \"6\": \"手游\",\r\n                        \"7\": \"听音乐\",\r\n                        \"8\": \"台球\"\r\n                    }\r\n                    return (\r\n                        <span>\r\n                            { <Tag color=\"blue\" key={config[interest]}>{config[interest]}</Tag> }\r\n                        </span>\r\n                    )                  \r\n\r\n                })\r\n\r\n            },            \r\n            {\r\n                title: 'Birthdate',\r\n                dataIndex: 'birthdate',\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (text,item) => {\r\n                    return <Button size=\"small\" type=\"danger\" onClick={item => { this.handleBtnDelete(item) }}>删除</Button>\r\n                }\r\n            }                                      \r\n        ]               \r\n        return (\r\n            <div>\r\n                <Card title=\"高级表格-表头固定\">\r\n                    <Table \r\n                        bordered\r\n                        columns={ columns }\r\n                        dataSource={ this.state.dataSource1 }\r\n                        pagination={ false }\r\n                        scroll={ {y: 200} }\r\n                    />\r\n                </Card>\r\n                <Card title=\"高级表格-左侧固定\">\r\n                    <Table \r\n                        columns={ columns2 }\r\n                        dataSource={ this.state.dataSource1 }\r\n                        pagination={ false }\r\n                        scroll={ {x:2000} }\r\n                    />\r\n                </Card>\r\n                <Card title=\"高级表格-排序\">\r\n                    <Table \r\n                        columns={ columns3 }\r\n                        dataSource={ this.state.dataSource1 }\r\n                        pagination={ false }\r\n                        sortOrder={this.state.sortOrder}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </Card>  \r\n                <Card title=\"高级表格-操作按钮\">\r\n                    <Table \r\n                        columns={ columns4 }\r\n                        dataSource={ this.state.dataSource1 }\r\n                        pagination={ false }\r\n                    />\r\n                </Card>                                               \r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react'\r\nimport { Card,Button,Modal } from 'antd'\r\nimport { Editor } from 'react-draft-wysiwyg'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport draftToHtml from 'draftjs-to-html'\r\n\r\nexport default class richText extends Component{\r\n\r\n    state = {\r\n        showRichText: false,\r\n        editorState: ''\r\n    };\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState\r\n        })\r\n    }\r\n\r\n    handleClearContent = () => {\r\n        this.setState({\r\n            editorState: ''\r\n        })\r\n    }\r\n\r\n    handleGetText = () => {\r\n        this.setState({\r\n            showRichText: true\r\n        })\r\n    }\r\n\r\n    onEditorChange = (contentState) => {\r\n        this.setState({\r\n            contentState // 内容状态\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const { editorState } = this.state;\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type=\"primary\" onClick={this.handleClearContent}>清空内容</Button>\r\n                    <Button type=\"primary\" onClick={this.handleGetText}>获取HTML文本</Button>\r\n                </Card>\r\n                <Card>\r\n                    <Editor\r\n                        editorState={editorState}\r\n                        onContentStateChange={this.onEditorChange}\r\n                        onEditorStateChange={this.onEditorStateChange}\r\n                    />\r\n                </Card>\r\n                <Modal\r\n                    title=\"富文本\"\r\n                    visible={this.state.showRichText}\r\n                    onCancel={ () => {\r\n                        this.setState({\r\n                            showRichText: false\r\n                        })\r\n                    }}\r\n                    footer={null}\r\n                >\r\n                    {draftToHtml(this.state.contentState)}\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n} ","import React,{ Component } from 'react';\r\nimport { Form,Button, Select,Checkbox,Radio, Input, DatePicker } from 'antd';\r\nimport Utils from './../../utils/utils'\r\nconst FormItem = Form.Item\r\nconst Option = Select.Option \r\n\r\nclass CommonForm extends Component {\r\n\r\n    handleFilterSubmit = () => {\r\n        let fieldValue = this.props.form.getFieldsValue();\r\n        console.log(fieldValue);\r\n        this.props.filterSubmit(fieldValue)\r\n    }\r\n\r\n    reset = () => {\r\n        this.props.form.resetFields();\r\n    }\r\n\r\n    initFormList = () => {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formList = this.props.formList;\r\n        const formItemList = [];\r\n        if ( formList && formList.length > 0 ) {\r\n            formList.forEach( (item,i) => {\r\n                let label = item.label;\r\n                let field = item.field;\r\n                let initialValue = item.initialValue || '';\r\n                let placeholder = item.placeholder;\r\n                let width = item.width;\r\n                if ( item.type === '城市' ) {\r\n                    const city = <FormItem label=\"城市\" key={ field }>\r\n                        {\r\n                            getFieldDecorator('city',{\r\n                                initialValue: '0'\r\n                            })(\r\n                                <Select \r\n                                    style={{width: 80}}\r\n                                    placeholder={placeholder}\r\n                                >\r\n                                    { Utils.getOptionList([{id: '0',name: '全部'},{id: '1',name: '北京'},{id: '2',name: '上海'}]) }\r\n                                </Select>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    formItemList.push(city)\r\n                } else if ( item.type === '时间查询' ) {\r\n                    const begin_time = <FormItem label=\"订单时间\" key={field}>\r\n                        {\r\n                            getFieldDecorator('begin_time')(\r\n                                <DatePicker \r\n                                    showTime={ true }\r\n                                    format=\"YYYY-MM-DD HH-mm-ss\"\r\n                                />\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    formItemList.push(begin_time)\r\n                    const end_time = <FormItem label=\"~\" colon={ false } key={ field }>\r\n                        {\r\n                            getFieldDecorator('end_time')(\r\n                                <DatePicker \r\n                                    showTime= { true }\r\n                                    format=\"YYYY-MM-DD HH-mm-ss\"\r\n                                />\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    formItemList.push(end_time)\r\n                } else if ( item.type === 'INPUT' ) {\r\n                    const INPUT = <FormItem label={label} key={field}>\r\n                        {\r\n                            getFieldDecorator([field],{\r\n                                initialValue: initialValue\r\n                            })(\r\n                                <Input type=\"text\" placeholder={ placeholder } />\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    formItemList.push(INPUT);\r\n                } else if ( item.type === 'SELECT' ) {\r\n                    const SELECT = <FormItem label={label} key={field}>\r\n                        {\r\n                            getFieldDecorator([field],{\r\n                                initialValue: initialValue\r\n                            })(\r\n                                <Select \r\n                                    style={{width: width}}\r\n                                    placeholder={placeholder}\r\n                                >\r\n                                    { Utils.getOptionList(item.list) }\r\n                                </Select>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    formItemList.push(SELECT);\r\n                } else if ( item.type === 'CHECKBOX' ) {\r\n                    const CHECKBOX = <FormItem label={label} key={field}>\r\n                        {\r\n                            getFieldDecorator([field],{\r\n                                valuePropName: 'checked', // 控制checkbox是否选中的初始值\r\n                                initialValue: initialValue\r\n                            })(\r\n                                <Checkbox>\r\n                                    { label }\r\n                                </Checkbox>\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    formItemList.push(CHECKBOX)\r\n                } else if ( item.type === 'DATE' ) {\r\n                    const DATE = <FormItem label={ label } key={ field }>\r\n                        {\r\n                            getFieldDecorator([field])(\r\n                                <DatePicker \r\n                                    showTime= { true }\r\n                                    format=\"YYYY-MM-DD HH-mm-ss\"\r\n                                />\r\n                            )\r\n                        }\r\n                        </FormItem>\r\n                    formItemList.push(DATE)\r\n                }\r\n\r\n            });\r\n        }\r\n        return formItemList;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Form layout=\"inline\">\r\n                { this.initFormList() }\r\n                \r\n                <FormItem>\r\n                    <Button type=\"primary\" onClick={ this.handleFilterSubmit }>查询</Button>\r\n                    <Button onClick={ this.reset }>重置</Button>\r\n                </FormItem>                 \r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create({})(CommonForm)","import React,{ Component } from 'react'\r\nimport { Card, Button, Table, Modal, Form, Select, message } from 'antd';\r\nimport BaseForm from './../../components/BaseForm'\r\nimport axios from './../../axios'\r\nimport Utils from './../../utils/utils'\r\nconst FormItem = Form.Item\r\nconst Option = Select.Option\r\n\r\nexport default class CityIndex extends Component{\r\n\r\n    state = {\r\n        list: [],\r\n        isShowOpenCity: false\r\n    }\r\n\r\n    params = {\r\n        page: 1\r\n    }\r\n\r\n    formList = [\r\n        {\r\n            type: 'SELECT',\r\n            label: '城市',\r\n            placeholder: '全部',\r\n            field: 'city_id',\r\n            width: '120',\r\n            initialValue: 1,\r\n            list: [\r\n                {id: 0, name: '全部'},\r\n                {id: 1, name: '北京市'},\r\n                {id: 2, name: '天津市'},\r\n                {id: 3, name: '深圳市'}\r\n            ]\r\n        },\r\n        {\r\n            type: 'SELECT',\r\n            label: '用车模式',\r\n            placeholder: '全部',\r\n            field: 'mode',\r\n            width: '150',\r\n            initialValue: 1,\r\n            list: [\r\n                {id: 0, name: '全部'},\r\n                {id: 1, name: '制定停车点模式'},\r\n                {id: 2, name: '禁停区模式'},\r\n            ]\r\n        },\r\n        {\r\n            type: 'SELECT',\r\n            label: '营运模式',\r\n            placeholder: '全部',\r\n            field: 'use_mode',\r\n            width: '120',\r\n            initialValue: 1,\r\n            list: [\r\n                {id: 0, name: '全部'},\r\n                {id: 1, name: '自营'},\r\n                {id: 2, name: '加盟'}\r\n            ]\r\n        },\r\n        {\r\n            type: 'SELECT',\r\n            label: '加盟商授权状态',\r\n            placeholder: '全部',\r\n            field: 'auth_status',\r\n            width: '120',\r\n            initialValue: 1,\r\n            list: [\r\n                {id: 0, name: '全部'},\r\n                {id: 1, name: '已授权'},\r\n                {id: 2, name: '未授权'}\r\n            ]\r\n        },        \r\n    ]\r\n\r\n    componentDidMount () {\r\n        this.requestList()\r\n    }\r\n\r\n    requestList = () => {\r\n        axios.requestList(this, '/open_city', this.params, true);\r\n    }\r\n   \r\n    handleOpenCity = () => {\r\n        this.setState({\r\n            isShowOpenCity: true\r\n        })\r\n    }\r\n\r\n    //城市开通提交\r\n    handleSubmit = () => {\r\n        let cityInfo = this.cityForm.props.form.getFieldsValue();\r\n        console.log(cityInfo);\r\n        axios.ajax({\r\n            url: '/city/open',\r\n            data: {\r\n                params: cityInfo\r\n            }\r\n        }).then((res) => {\r\n            console.log(res);\r\n            if ( res.code === 200 ) {\r\n                message.success('开通成功');\r\n                this.setState({\r\n                    isShowOpenCity: false\r\n                })\r\n                this.requestList();\r\n            }\r\n        })\r\n    }\r\n\r\n    // 处理baseform传递过来的数据\r\n    handleFilter = (params) => {\r\n        this.params = params;\r\n        this.requestList();\r\n    }\r\n\r\n    render () {\r\n\r\n        const columns = [\r\n            {\r\n                title:'城市ID',\r\n                dataIndex:'id'\r\n            }, \r\n            {\r\n                title: '城市名称',\r\n                dataIndex: 'name'\r\n            }, \r\n            {\r\n                title: '用车模式',\r\n                dataIndex: 'mode',\r\n                render(mode){\r\n                    return mode === 1 ?'停车点':'禁停区';\r\n                }\r\n            }, \r\n            {\r\n                title: '营运模式',\r\n                dataIndex: 'op_mode',\r\n                render(op_mode) {\r\n                    return op_mode === 1 ? '自营' : '加盟';\r\n                }\r\n            }, \r\n            {\r\n                title: '授权加盟商',\r\n                dataIndex: 'franchisee_name'\r\n            }, \r\n            {\r\n                title: '城市管理员',\r\n                dataIndex: 'city_admins',\r\n                render(arr){\r\n                    return arr.map((item)=>{\r\n                        return item.user_name;\r\n                    }).join(',');\r\n                }\r\n            }, \r\n            {\r\n                title: '城市开通时间',\r\n                dataIndex: 'open_time'\r\n            }, \r\n            {\r\n                title: '操作时间',\r\n                dataIndex: 'update_time',\r\n                render: Utils.formateDate\r\n            }, \r\n            {\r\n                title: '操作人',\r\n                dataIndex: 'sys_user_name'\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <BaseForm formList={ this.formList } filterSubmit={ this.handleFilter } />\r\n                </Card>\r\n                <Card>\r\n                    <Button type=\"primary\" onClick={this.handleOpenCity}>开放城市</Button>\r\n                </Card>\r\n                <Card>\r\n                    <Table\r\n                        columns={ columns }\r\n                        dataSource= { this.state.dataSource }\r\n                        pagination={ this.state.pagination }\r\n                    />\r\n                </Card>\r\n                <Modal\r\n                    title=\"开通城市\"\r\n                    visible={this.state.isShowOpenCity}\r\n                    onCancel={ () => {\r\n                            this.setState({\r\n                                isShowOpenCity: false\r\n                            })\r\n                        }\r\n                    } \r\n                    onOk={ this.handleSubmit }\r\n                >\r\n                    {/* <OpenCityForm wrappedComponentRef={inst => { this.cityForm = inst }} /> */}\r\n                    <OpenCityForm wrappedComponentRef={(inst)=>{this.cityForm = inst;}}/>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass OpenCityForm extends Component {\r\n    render () {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                span: 5\r\n            },\r\n            wrapperCol: {\r\n                span: 19\r\n            }\r\n        }\r\n        const { getFieldDecorator } = this.props.form\r\n        return (\r\n            <Form layout=\"horizontal\">\r\n                <FormItem label=\"城市选择\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('city_id',{\r\n                            initialValue: '1'\r\n                        })(\r\n                            <Select style={{width:100}}>\r\n                                <Option value=\"\">全部</Option>\r\n                                <Option value=\"1\">北京市</Option>\r\n                                <Option value=\"2\">天津市</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"自营模式\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('op_mode',{\r\n                            initialValue: '1'\r\n                        })(\r\n                            <Select style={{width:100}}>\r\n                                <Option value=\"1\">自营</Option>\r\n                                <Option value=\"2\">加盟</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem> \r\n                <FormItem label=\"用车模式\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('use_mode',{\r\n                            initialValue: '1'\r\n                        })(\r\n                            <Select style={{width:100}}>\r\n                                <Option value=\"1\">指定停车点</Option>\r\n                                <Option value=\"2\">禁停区</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>                                \r\n            </Form>\r\n        )\r\n\r\n    }\r\n}\r\nOpenCityForm = Form.create({})(OpenCityForm);","import React,{ Component } from 'react'\r\nimport { Card,Button, Table, Modal, message } from 'antd'\r\nimport BaseForm from './../../components/BaseForm'\r\nimport axios from './../../axios'\r\nimport Utils from './../../utils/utils'\r\n\r\n\r\nexport default class OrderIndex extends Component {\r\n\r\n    state = {\r\n        orderConfirmVisivle: false\r\n    }\r\n\r\n    params = {\r\n        page: 1\r\n    }\r\n\r\n    formList = [\r\n        {\r\n            type: 'SELECT',\r\n            label: '城市',\r\n            field: 'city_id',\r\n            placeholder: '全部',\r\n            list: [\r\n                {id: 0, name: '全部'},\r\n                {id: 1, name: '北京市'},\r\n                {id: 2, name: '天津市'},\r\n                {id: 3, name: '上海市'}\r\n            ],\r\n            initialValue: 1,\r\n            width: 100\r\n        },\r\n        {\r\n            type: '时间查询'\r\n        },\r\n        {\r\n            type: 'SELECT',\r\n            label: '订单状态',\r\n            field: 'order_status',\r\n            placeholder: '全部',\r\n            list: [\r\n                {id: 0, name: '全部'},\r\n                {id: 1, name: '进行中'},\r\n                {id: 2, name: '进行中(临时锁车)'},\r\n                {id: 3, name: '行程结束'}\r\n            ],\r\n            initialValue: 1,\r\n            width: 100\r\n        }        \r\n    ]\r\n\r\n    componentDidMount () {\r\n        this.requestList()\r\n    }\r\n\r\n    // 处理BaseForm传递过来的参数\r\n    handleFilter = (params) => {\r\n        console.log('baseform传值'+params);\r\n        this.params = params;\r\n        this.requestList();\r\n    }\r\n\r\n    requestList = () => {\r\n        // axios.requestList(this, '/order/list', this.params)\r\n        axios.ajax({\r\n            url: '/order/list',\r\n            data: {\r\n                params: {\r\n                    page: this.params\r\n                }\r\n            }\r\n        }).then( (res) => {\r\n            if ( res.code === 200 ) {\r\n                res.result.list.map((item,index) => {\r\n                    item.key = index\r\n                    return item\r\n                })\r\n                this.setState({\r\n                    dataSource: res.result.list,\r\n                    selectedRowKeys: [],\r\n                    pagination: Utils.pagination(res,(current) => {\r\n                        this.params.page = current\r\n                        this.requestList();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleRowClick = (record,index) => {\r\n        let selectKey = [ index ];\r\n        console.log(selectKey);\r\n        Modal.info({\r\n            title:'信息',\r\n            content: `用户名: ${record.userName}`\r\n        })\r\n        this.setState({\r\n            selectedRowKeys: selectKey,\r\n            selectedItem: record\r\n        })\r\n    }\r\n\r\n    // 结束订单确认\r\n    handleEndComfirm = () => {\r\n        let item = this.state.selectedItem;\r\n        message.success('操作成功');\r\n        this.setState({\r\n            orderConfirmVisivle: false\r\n        })\r\n        this.requestList();\r\n    }\r\n\r\n    // 结束订单\r\n    handleEndOrder = () => {\r\n        let item = this.state.selectedItem;\r\n        console.log(item);\r\n        if ( !item ){\r\n            Modal.info({\r\n                title: '提示',\r\n                content: '请选中任一条订单'\r\n            })\r\n            return;\r\n        }\r\n        axios.ajax({\r\n            url: '/finish_order',\r\n            data: {\r\n                params: {\r\n                    order_id: item.order_num\r\n                }\r\n            }\r\n        }).then(res => {\r\n            if( res.code === 200 ) {\r\n                this.setState({\r\n                    orderConfirmVisivle: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    // 订单详情\r\n    handleOrderDetail = () => {\r\n        let item = this.state.selectedItem\r\n        if( !item ) {\r\n            Modal.info({\r\n                title: '提示',\r\n                content: '请先选择任意订单'\r\n            })\r\n            return;\r\n        }\r\n        window.open(`/#/common/order/detail/${item.order_num}`,'_blank');\r\n    }\r\n\r\n    render () {\r\n        const { selectedRowKeys } = this.state\r\n        const rowSelection = {\r\n            type: 'radio',\r\n            selectedRowKeys\r\n        }\r\n        const columns = [\r\n            {\r\n                title: '订单编号',\r\n                dataIndex: 'order_num',\r\n                key: 'order_num'\r\n            },\r\n            {\r\n                title: '车辆编号',\r\n                dataIndex: 'bike_num',\r\n                key: 'bike_num'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'userName',\r\n                key: 'userName'\r\n            },\r\n            {\r\n                title: '手机号码',\r\n                dataIndex: 'phoneNum',\r\n                key: 'phoneNum'\r\n            },\r\n            {\r\n                title: '里程',\r\n                dataIndex: 'miles',\r\n                key: 'miles',\r\n                render: (miles) => {\r\n                    return miles+'km'\r\n                }\r\n            },\r\n            {\r\n                title: '行程时长',\r\n                dataIndex: 'take_hours',\r\n                key: 'take_hours'\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'status',\r\n                key: 'status',\r\n                render: (status) => {\r\n                    let config = {\r\n                        \"1\": \"进行中\",\r\n                        \"2\": \"进行中(临时锁车)\",\r\n                        \"3\": \"行程结束\"\r\n                    }\r\n                    return config[status]\r\n                }\r\n            },\r\n            {\r\n                title: '开始时间',\r\n                dataIndex: 'start_time',\r\n                key: 'start_time'\r\n            },\r\n            {\r\n                title: '结束时间',\r\n                dataIndex: 'end_time',\r\n                key: 'end_time'\r\n            },\r\n            {\r\n                title: '订单金额',\r\n                dataIndex: 'order_money',\r\n                key: 'order_money'\r\n            },\r\n            {\r\n                title: '实付金额',\r\n                dataIndex: 'pay_money',\r\n                key: 'pay_money'\r\n            }            \r\n        ]\r\n        \r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <BaseForm formList= { this.formList } filterSubmit={ this.handleFilter } />\r\n                </Card>\r\n                <Card>\r\n                    <Button type=\"primary\" onClick={ this.handleOrderDetail }>订单详情</Button>\r\n                    <Button type=\"primary\" onClick={ this.handleEndOrder }>结束订单</Button>\r\n                    <Modal\r\n                        title=\"确认\"\r\n                        visible={ this.state.orderConfirmVisivle }\r\n                        onCancel={ () => {\r\n                            this.setState({\r\n                                orderConfirmVisivle: false\r\n                            })\r\n                        }}\r\n                        onOk={  this.handleEndComfirm }\r\n                    >确认结束改订单么？</Modal>\r\n                </Card>\r\n                <Card>\r\n                    <Table\r\n                        bordered\r\n                        columns={ columns }\r\n                        dataSource={ this.state.dataSource }\r\n                        pagination={ this.state.pagination }\r\n                        rowSelection={ rowSelection }\r\n                        onRow={ (record,index) => {\r\n                            return {\r\n                                onClick: () => {\r\n                                    this.handleRowClick(record,index)\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Row } from 'antd';\r\nimport Header from './components/Header';\r\nimport './style/common.less'\r\n\r\n\r\nexport default class Common extends Component {\r\n    render () {\r\n        return (\r\n            <div>           \r\n                <Row className=\"simple-page\">\r\n                    <Header menuType=\"second\" />\r\n                </Row>\r\n                <Row className=\"content\">\r\n                    { this.props.children }\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{ Component } from 'react'\r\nimport { Card } from 'antd';\r\nimport axios from './../../axios'\r\nimport './detail.less'\r\n\r\nexport default class OrderDetail extends Component {\r\n\r\n    state= {}\r\n\r\n    componentDidMount () {\r\n        let orderId = this.props.match.params.orderId;\r\n        console.log(orderId);\r\n        this.getDetailInfo(orderId);\r\n    }\r\n\r\n    renderMap = (result) => {\r\n        this.map = new window.BMap.Map('orderDetailMap');\r\n        // let point = new window.BMap.Point(116.404,39.915);\r\n        // 创建点坐标\r\n        // this.map.centerAndZoom('北京',11)\r\n        this.addMapControl();\r\n        this.drawBikeRoute(result.position_list);\r\n        this.drawServiceArea(result.area);\r\n    }\r\n\r\n    // map 添加地图控件\r\n    addMapControl = () => {\r\n        let map = this.map;\r\n        map.addControl(new window.BMap.ScaleControl({anchor: window.BMAP_ANCHOR_TOP_RIGHT}))\r\n        map.addControl(new window.BMap.NavigationControl({anchor: window.BMAP_ANCHOR_TOP_RIGHT}))\r\n    }\r\n\r\n    // 绘制用户的行驶路线\r\n    drawBikeRoute = (positionList) => {\r\n        // let map = this.map;\r\n        let startPoint = '';\r\n        let endPoint = '';\r\n        if ( positionList.length > 0 ) {\r\n            let first = positionList[0];\r\n            let last = positionList[positionList.length - 1]\r\n            startPoint = new window.BMap.Point(first.lon,first.lat);\r\n            let startIcon = new window.BMap.Icon('/assets/start_point.png',new window.BMap.Size(36,42),{\r\n                imageSize: new window.BMap.Size(36,42),\r\n                anchor: new window.BMap.Size(36,42)\r\n            })\r\n\r\n            let startMarker = new window.BMap.Marker(startPoint,{icon:startIcon});\r\n            this.map.addOverlay(startMarker)\r\n\r\n            endPoint = new window.BMap.Point(last.lon,last.lat);\r\n            let endIcon = new window.BMap.Icon('/assets/end_point.png',new window.BMap.Size(36,42),{\r\n                imageSize: new window.BMap.Size(36,42),\r\n                anchor: new window.BMap.Size(36,42)\r\n            })   \r\n            let endMarker = new window.BMap.Marker(endPoint,{icon:endIcon})\r\n            this.map.addOverlay(endMarker); \r\n            \r\n            // 连接路线图\r\n            let trackPoint = [];\r\n            for (let i=0; i < positionList.length; i++){\r\n                let point = positionList[i];\r\n                trackPoint.push(new window.BMap.Point(point.lon, point.lat))\r\n            }\r\n\r\n            let polyLine = new window.BMap.Polyline(trackPoint,{\r\n                strokeColor: '#1869ad',\r\n                strokeWeight: 3,\r\n                strokeOpacity: 1 \r\n            })\r\n            this.map.addOverlay(polyLine);\r\n            this.map.centerAndZoom(endPoint,11);\r\n        }\r\n    }\r\n\r\n    // 绘制服务区\r\n    drawServiceArea = (position_list) => {\r\n        let trackPoint = [];\r\n        for (let i = 0; i < position_list.length; i++){\r\n            let point = position_list[i];\r\n            trackPoint.push(new window.BMap.Point(point.lon, point.lat))\r\n        }\r\n\r\n        let polygon = new window.BMap.Polygon(trackPoint,{\r\n            strokeColor: '#CE0000',\r\n            strokeWeight: 4,\r\n            strokeOpacity: 1,\r\n            fillColor: '#ff8605',\r\n            // fillOpacity: 0.4\r\n        })\r\n        this.map.addOverlay(polygon);\r\n    }\r\n\r\n    getDetailInfo = (orderId) => {\r\n        axios.ajax({\r\n            url: '/order/detail',\r\n            data: {\r\n                params: {\r\n                    orderId:orderId\r\n                }\r\n            }\r\n        }).then( (res) => {\r\n            if ( res.code === 200 ) {\r\n                this.setState({\r\n                    orderInfo: res.result\r\n                })\r\n                this.renderMap(res.result);\r\n            }\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const info = this.state.orderInfo || {}\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <div id=\"orderDetailMap\" className=\"order-map\"></div>\r\n                    <div className=\"detail-items\">\r\n                        <div className=\"item-title\">基础信息</div>\r\n                        <ul className=\"detail-form\">\r\n                            <li>\r\n                                <div className=\"detail-form-left\">用车模式</div>\r\n                                <div className=\"detail-form-content\">\r\n                                    { info.mode === 1 ? '服务区' : '停车点' }\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">订单编号</div>\r\n                                <div className=\"detail-form-content\">{ info.order_sn }</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">车辆编号</div>\r\n                                <div className=\"detail-form-content\">{ info.bike_sn }</div>\r\n                            </li> \r\n                            <li>\r\n                                <div className=\"detail-form-left\">用户姓名</div>\r\n                                <div className=\"detail-form-content\">{ info.user_name }</div>\r\n                            </li>  \r\n                            <li>\r\n                                <div className=\"detail-form-left\">手机号码</div>\r\n                                <div className=\"detail-form-content\">{ info.mobile }</div>\r\n                            </li>                                                                                   \r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"detail-items\">\r\n                        <div className=\"item-title\">行驶轨迹</div>\r\n                        <ul className=\"detail-form\">\r\n                            <li>\r\n                                <div className=\"detail-form-left\">行程起点</div>\r\n                                <div className=\"detail-form-content\">{ info.start_location }</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">行程重点</div>\r\n                                <div className=\"detail-form-content\">{ info.end_location }</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">行驶里程</div>\r\n                                <div className=\"detail-form-content\">{ info.distance/1000 }公里</div>\r\n                            </li>                                                                                   \r\n                        </ul>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\nimport Utils from '../../utils/utils'\nimport {Table} from 'antd'\nimport  \"./index.less\"\nexport default class ETable extends React.Component {\n\n    state = {}\n    //处理行点击事件\n    onRowClick = (record, index) => {\n        let rowSelection = this.props.rowSelection;\n        if(rowSelection === 'checkbox'){\n            let selectedRowKeys = this.props.selectedRowKeys;\n            let selectedIds = this.props.selectedIds;\n            let selectedItem = this.props.selectedItem || [];\n            if (selectedIds) {\n                const i = selectedIds.indexOf(record.id);\n                if (i === -1) {//避免重复添加\n                    selectedIds.push(record.id)\n                    selectedRowKeys.push(index);\n                    selectedItem.push(record);\n                }else{\n                    selectedIds.splice(i,1);\n                    selectedRowKeys.splice(i,1);\n                    selectedItem.splice(i,1);\n                }\n            } else {\n                selectedIds = [record.id];\n                selectedRowKeys = [index]\n                selectedItem = [record];\n            }\n            this.props.updateSelectedItem(selectedRowKeys,selectedItem || {},selectedIds);\n        }else{\n            let selectKey = [index];\n            const selectedRowKeys = this.props.selectedRowKeys;\n            if (selectedRowKeys && selectedRowKeys[0] == index){\n                return;\n            }\n            this.props.updateSelectedItem(selectKey,record || {});\n        }\n    };\n\n    // 选择框变更\n    onSelectChange = (selectedRowKeys, selectedRows) => {\n        let rowSelection = this.props.rowSelection;\n        const selectedIds = [];\n        if(rowSelection === 'checkbox'){\n            selectedRows.map((item)=>{\n                selectedIds.push(item.id);\n            });\n            this.setState({\n                selectedRowKeys,\n                selectedIds:selectedIds,\n                selectedItem: selectedRows[0]\n            });\n        }\n        this.props.updateSelectedItem(selectedRowKeys,selectedRows[0],selectedIds);\n    };\n\n    onSelectAll = (selected, selectedRows, changeRows) => {\n        let selectedIds = [];\n        let selectKey = [];\n        selectedRows.forEach((item,i)=> {\n            selectedIds.push(item.id);\n            selectKey.push(i);\n        });\n        this.props.updateSelectedItem(selectKey,selectedRows[0] || {},selectedIds);\n    }\n\n    getOptions = () => {\n        let p = this.props;\n        const name_list = {\n            \"订单编号\":170,\n            \"车辆编号\":80,\n            \"手机号码\":96,\n            \"用户姓名\":70,\n            \"密码\":70,\n            \"运维区域\":300,\n            \"车型\":42,\n            \"故障编号\":76,\n            \"代理商编码\":97,\n            \"角色ID\":64\n        };\n        if (p.columns && p.columns.length > 0) {\n            p.columns.forEach((item)=> {\n                //开始/结束 时间\n                if(!item.title){\n                    return\n                }\n                if(!item.width){\n                    if(item.title.indexOf(\"时间\") > -1 && item.title.indexOf(\"持续时间\") < 0){\n                        item.width = 132\n                    }else if(item.title.indexOf(\"图片\") > -1){\n                        item.width = 86\n                    }else if(item.title.indexOf(\"权限\") > -1 || item.title.indexOf(\"负责城市\") > -1){\n                        item.width = '40%';\n                        item.className = \"text-left\";\n                    }else{\n                        if(name_list[item.title]){\n                            item.width = name_list[item.title];\n                        }\n                    }\n                }\n                item.bordered = true;\n            });\n        }\n        const { selectedRowKeys } = this.props;\n        const rowSelection = {\n            type: 'radio',\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n            onSelect:(record, selected, selectedRows)=>{\n                console.log('...')\n            },\n            onSelectAll:this.onSelectAll\n        };\n        let row_selection = this.props.rowSelection;\n        // 当属性未false或者null时，说明没有单选或者复选列\n        if(row_selection===false || row_selection === null){\n            row_selection = false;\n        }else if(row_selection === 'checkbox'){\n            //设置类型未复选框\n            rowSelection.type = 'checkbox';\n        }else{\n            //默认未单选\n            row_selection = 'radio';\n        }\n        return <Table \n                className=\"card-wrap page-table\"\n                bordered \n                {...this.props}\n                rowSelection={row_selection?rowSelection:null}\n                onRow={(record,index) => ({\n                    onClick: ()=>{\n                        if(!row_selection){\n                            return;\n                        }\n                        this.onRowClick(record,index)\n                    }\n                  })}\n            />\n    };\n    render = () => {\n        return (\n            <div>\n                {this.getOptions()}\n            </div>\n        )\n    }\n}","import React,{ Component } from 'react'\r\nimport { Card,Form,Button,Input,Modal,Radio,DatePicker, Select } from 'antd'\r\nimport axios from './../../axios'\r\nimport Utils from './../../utils/utils'\r\nimport BaseForm from './../../components/BaseForm'\r\nimport ETable from './../../components/ETable'\r\nimport moment from 'moment';\r\nconst FormItem = Form.Item\r\nconst RadioGroup = Radio.Group\r\nconst TextArea = Input.TextArea\r\nconst Option = Select.Option\r\n\r\nclass UserIndex extends Component {\r\n\r\n    state = {\r\n        isVisible: false\r\n    };\r\n\r\n    params = {\r\n        page: 1\r\n    };\r\n\r\n    formList = [\r\n        {\r\n            type: 'INPUT',\r\n            label: '用户名',\r\n            field: 'user_name',\r\n            placeholder: '请输入用户名称',\r\n            width: 100\r\n        },\r\n        {\r\n            type: 'INPUT',\r\n            label: '用户手机号',\r\n            field: 'user_mobile',\r\n            placeholder: '请输入用户手机号',\r\n            width: 100\r\n        },        \r\n        {\r\n            type: 'DATE',\r\n            label: '请选择入职日期',\r\n            field: 'user_date',\r\n            placeholder: '请选择日期'\r\n        }       \r\n    ]\r\n\r\n    componentDidMount () {\r\n        this.requestList();\r\n    }\r\n\r\n    handleOperate = (type) => {\r\n        let item = this.state.selectedItem;\r\n        // console.log(item);\r\n        if ( !item && type !== 'create' ) {\r\n            Modal.info({\r\n                title: '提示',\r\n                content: '请选择一个用户'\r\n            })\r\n            return;\r\n        }\r\n        if ( type === 'create' ) {\r\n            this.setState({\r\n                type,\r\n                isVisible: true,\r\n                title: '创建员工'\r\n            })\r\n        } else if ( type === 'edit' ) {\r\n            this.setState({\r\n                type,\r\n                isVisible: true,\r\n                title: '编辑员工',\r\n                userInfo: item\r\n            })            \r\n        } else if ( type === 'detail' ) {\r\n            this.setState({\r\n                type,\r\n                isVisible: true,\r\n                title: '员工详情',\r\n                userInfo: item\r\n            })             \r\n        } else {\r\n            Modal.confirm({\r\n                title: '确认删除',\r\n                content: '是否删除当前选中员工？',\r\n                onOk: () => {\r\n                    axios.ajax({\r\n                        url: '/user/delete',\r\n                        data: {\r\n                            params: {\r\n                                id: item.id\r\n                            }\r\n                        }\r\n                    }).then( (res) => {\r\n                        if ( res.code === 200 ) {\r\n                            this.setState({\r\n                                isVisible: false\r\n                            })\r\n                        }\r\n                        this.requestList();\r\n                    })\r\n                },\r\n                onCancel: () => {\r\n                    this.setState({\r\n                        isVisible: false\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleFilter = (params) => {\r\n        this.params = params;\r\n        this.requestList();\r\n    }\r\n\r\n    requestList = () =>{\r\n        axios.requestList(this,'/user/list',this.params);\r\n    }\r\n\r\n    // 创建员工提交\r\n    handleSubmit = () => {\r\n        let type = this.state.type;\r\n        let data = this.userForm.props.form.getFieldsValue();\r\n        console.log(data);\r\n        axios.ajax({\r\n            url: type === 'create' ? '/user/add' : '/user/edit',\r\n            data: {\r\n                params: data\r\n            }\r\n        }).then( (res) => {\r\n            if ( res.code === 200 ) {\r\n                \r\n                this.setState({\r\n                    isVisible: false\r\n                });\r\n                this.requestList();\r\n                this.userForm.props.form.resetFields();\r\n            }\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const columns = [\r\n            {\r\n                title: 'id',\r\n                dataIndex: 'id',\r\n                key: 'id'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'name',\r\n                key: 'name'\r\n            },\r\n            {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                key: 'sex',\r\n                render: (sex) => {\r\n                    return sex === 1 ? '男' : '女'\r\n                }\r\n            },\r\n            {\r\n                title: '爱好',\r\n                dataIndex: 'interest',\r\n                key: 'interest',\r\n                render: (interest) => {\r\n                    return {\r\n                        '1' : '跑步',\r\n                        '2' : '瑜伽',\r\n                        '3' : '台球',\r\n                        '4' : '乒乓球',\r\n                        '5' : '羽毛球',\r\n                        '6' : '遛狗',\r\n                        '7' : '逛街',\r\n                        '8' : '看电影'\r\n                    }[interest]\r\n                }\r\n            },                         \r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                key: 'state',\r\n                render: (state) => {\r\n                    return {\r\n                        '1' : '好好学习',\r\n                        '2' : '天天向上',\r\n                        '3' : '乐于助人',\r\n                        '4' : '乐善好施',\r\n                        '5' : '慈眉善目',\r\n                        '6' : '沉迷游戏',\r\n                        '7' : '无精打采',\r\n                        '8' : '丢人现眼'\r\n                    }[state]\r\n                }\r\n            },\r\n            {\r\n                title: '生日',\r\n                dataIndex: 'birthdate',\r\n                key: 'birthdate'\r\n            }, \r\n            {\r\n                title: '联系地址',\r\n                dataIndex: 'address',\r\n                key: 'address'\r\n            }                           \r\n        ]\r\n       \r\n        let footer = {};\r\n        if ( this.state.type === 'detail' ) {\r\n            footer = {\r\n                footer: null\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <Card>               \r\n                    <BaseForm formList={ this.formList } filterSubmit={ this.handleFilter } />\r\n                </Card>\r\n                <Card>\r\n                    <Button type=\"primary\" icon=\"plus\" onClick={ () => this.handleOperate('create') }>创建员工</Button>\r\n                    <Button type=\"primary\" icon=\"edit\" onClick={ () => this.handleOperate('edit') }>编辑员工</Button>\r\n                    <Button type=\"primary\" onClick={ () => this.handleOperate('detail') }>员工详情</Button>\r\n                    <Button type=\"danger\" icon=\"delete\" onClick={ () => this.handleOperate('delete') }>删除员工</Button>\r\n                </Card>\r\n                <Card>\r\n                    <ETable \r\n                        updateSelectedItem={ Utils.updateSelectedItem.bind(this) }\r\n                        columns={ columns }\r\n                        dataSource={ this.state.list }\r\n                        selectedRowKeys={ this.state.selectedRowKeys }\r\n                        selectedItem={ this.state.selectedItem }\r\n                        pagination={ this.state.pagination }\r\n                    />\r\n                </Card>\r\n                <Modal\r\n                    title={ this.state.title }\r\n                    visible= { this.state.isVisible }\r\n                    onOk={ this.handleSubmit }\r\n                    onCancel= { () => {\r\n                        this.userForm.props.form.resetFields();\r\n                        this.setState({\r\n                            isVisible: false\r\n                        })\r\n                    } }\r\n                    width={600}\r\n                    { ...footer }\r\n                >                   \r\n                    {/* wrappedComponentRef 相当于vue 的 ref */}\r\n                    <UserForm type={this.state.type} userInfo={ this.state.userInfo } wrappedComponentRef={ (inst) => this.userForm = inst } />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass UserForm extends Component {\r\n    render () {\r\n        const type = this.props.type;\r\n        const userInfo = this.props.userInfo || {};\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: {span: 5},\r\n            wrapperCol: {span: 15}\r\n        }\r\n        const getState = {\r\n            '1' : '好好学习',\r\n            '2' : '天天向上',\r\n            '3' : '乐于助人',\r\n            '4' : '乐善好施',\r\n            '5' : '慈眉善目',\r\n            '6' : '沉迷游戏',\r\n            '7' : '无精打采',\r\n            '8' : '丢人现眼'               \r\n        }\r\n        return (\r\n            <Form layout=\"horizontal\">\r\n                <FormItem label=\"用户名\" {...formItemLayout}>\r\n                    {\r\n                        type === 'detail' ? userInfo.name :\r\n                        getFieldDecorator('user_name',{\r\n                            initialValue: type=== 'edit' ? userInfo.name : ''\r\n                        })(\r\n                            <Input type=\"text\" placeholder=\"请输入用户名\" />\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"性别\" {...formItemLayout}>\r\n                    {\r\n                        type === 'detail' ? userInfo.sex=== 1 ? '男' : '女' :\r\n                        getFieldDecorator('sex',{\r\n                            initialValue: type=== 'edit' ? userInfo.sex : ''\r\n                        })(\r\n                            <RadioGroup>\r\n                                <Radio value={1}>男</Radio>\r\n                                <Radio value={2}>女</Radio>\r\n                            </RadioGroup>\r\n                        )\r\n                    }\r\n                </FormItem> \r\n                <FormItem label=\"状态\" {...formItemLayout}>\r\n                    {\r\n                        type === 'detail' ? getState[userInfo.state] :\r\n                        getFieldDecorator('status',{\r\n                            initialValue: type=== 'edit' ? userInfo.state : ''\r\n                        })(\r\n                            <Select>\r\n                                <Option value={1}>咸鱼一条</Option>\r\n                                <Option value={2}>努力少年</Option>\r\n                                <Option value={3}>呆萌金毛</Option>\r\n                                <Option value={4}>短腿柯基</Option>\r\n                                <Option value={5}>思考人生</Option>\r\n                                <Option value={6}>无精打采</Option>\r\n                                <Option value={7}>沉迷游戏</Option>\r\n                                <Option value={8}>热爱运动</Option>                               \r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>   \r\n                <FormItem label=\"生日\" {...formItemLayout}>\r\n                    {\r\n                        type === 'detail' ? userInfo.birthdate :\r\n                        getFieldDecorator('birthDate',{\r\n                            initialValue: type=== 'edit' ? moment(userInfo.birthdate) : ''\r\n                        })(\r\n                            <DatePicker />\r\n                        )\r\n                    }\r\n                </FormItem> \r\n                <FormItem label=\"联系地址\" {...formItemLayout}>\r\n                    {\r\n                        type === 'detail' ? userInfo.address :\r\n                        getFieldDecorator('address',{\r\n                            initialValue: type=== 'edit' ? userInfo.address : ''\r\n                        })(\r\n                            <TextArea rows={3}  placeholder=\"请输入联系地址\" />\r\n                        )\r\n                    }\r\n                </FormItem>                                                             \r\n            </Form>\r\n        )\r\n    }\r\n}\r\nUserForm = Form.create({})(UserForm)\r\n\r\nexport default Form.create({})(UserIndex)","import React,{ Component } from 'react'\r\nimport { Card } from 'antd'\r\nimport axios from './../../axios'\r\nimport BaseForm from './../../components/BaseForm'\r\n\r\nexport default class bikeMap extends Component{\r\n\r\n    state = {};\r\n\r\n    map = '';\r\n\r\n    params = {};\r\n\r\n    formList = [\r\n        {\r\n            type: '城市'\r\n        },\r\n        {\r\n            type: '时间查询'\r\n        },\r\n        {\r\n            type: 'SELECT',\r\n            label: '订单状态',\r\n            field: 'order_status',\r\n            placeholder: '全部',\r\n            initialValue: '0',\r\n            list: [\r\n                {id: '0', name: '全部'},\r\n                {id: '1', name: '进行中'},\r\n                {id: '2', name: '进行中(临时锁车)'},\r\n                {id: '3', name: '行程结束'}\r\n            ]\r\n        }\r\n    ];\r\n\r\n    requestList = () => {\r\n        axios.ajax({\r\n            url: '/map/bike_list',\r\n            data: {\r\n                params: this.params\r\n            }\r\n        }).then( (res) => {\r\n            if ( res.code === 200 ) {\r\n                this.setState({\r\n                    total_count: res.result.total_count\r\n                })\r\n                this.renderMap(res);\r\n            }\r\n        })\r\n    }\r\n\r\n    handleFilterSubmit = (filterParams) => {\r\n        this.params = filterParams;\r\n        this.requestList();\r\n    }\r\n\r\n    // 渲染地图数据\r\n    renderMap = (res) => {\r\n        const list = res.result.route_list\r\n        this.map = new window.BMap.Map('container');\r\n        const gps1 = list[0].split(',');\r\n        const startPoint = new window.BMap.Point(gps1[0], gps1[1]);\r\n        const gps2 = list[list.length-1].split(',');\r\n        const endPoint = new window.BMap.Point(gps2[0], gps2[1]);\r\n        this.map.centerAndZoom(endPoint,11);\r\n\r\n        const startPointIcon = new window.BMap.Icon('/assets/start_point.png', new window.BMap.Size(36,42),{\r\n            imageSize: new window.BMap.Size(36,42),\r\n            anchor: new window.BMap.Size(18,42)\r\n        })\r\n        const bikeMarkerStart = new window.BMap.Marker(startPoint,{ icon: startPointIcon})\r\n        this.map.addOverlay(bikeMarkerStart)\r\n        const endPointIcon = new window.BMap.Icon('/assets/end_point.png', new window.BMap.Size(36,42),{\r\n            imageSize: new window.BMap.Size(36,42),\r\n            anchor: new window.BMap.Size(18,42)\r\n        })\r\n        const bikeMarkerEnd = new window.BMap.Marker(endPoint,{ icon: endPointIcon })  \r\n        this.map.addOverlay(bikeMarkerEnd)  \r\n        \r\n        // 绘制车辆行驶路线\r\n        let routeList = [];\r\n        list.forEach(e => {\r\n            let p = e.split(',');\r\n            routeList.push(new window.BMap.Point(p[0],p[1]))\r\n        });\r\n\r\n        const polyLine = new window.BMap.Polyline(routeList,{\r\n            strokeColor: '#ef4136',\r\n            strokeWeight: 2,\r\n            strokeOpacity: 1\r\n        });       \r\n        this.map.addOverlay(polyLine);\r\n\r\n        // 绘制服务区\r\n        let servicePointList = [];\r\n        let serviceList =  res.result.service_list;\r\n        serviceList.forEach(e => {\r\n            servicePointList.push(new window.BMap.Point(e.lon,e.lat))\r\n        })\r\n\r\n        let pplyServiceLine = new window.BMap.Polyline(servicePointList, {\r\n            strokeColor: '#ef4136',\r\n            strokeWeight: 3,\r\n            strokeOpacity: 1        \r\n        });\r\n        this.map.addOverlay(pplyServiceLine);\r\n\r\n        // 添加地图中的自行车图标\r\n        let bikeList = res.result.bike_list;\r\n        const bikeIcon = new window.BMap.Icon('/assets/bike.jpg',new window.BMap.Size(36,42),{\r\n            imageSize: new window.BMap.Size(36,42),\r\n            anchor: new window.BMap.Size(18,42)\r\n        });\r\n        bikeList.forEach( e => {\r\n            let p = e.split(',');\r\n            let point = new window.BMap.Point(p[0],p[1]);\r\n            let bikeMarker = new window.BMap.Marker(point,{icon: bikeIcon});\r\n            this.map.addOverlay(bikeMarker);\r\n        });\r\n\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.requestList();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <BaseForm formList={this.formList} filterSubmit={this.handleFilterSubmit} />\r\n                </Card>\r\n                <Card>\r\n                    <div>\r\n                        <div>共{this.state.total_count}辆车</div>\r\n                        <div id=\"container\" style={{height: 500}}></div>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Card } from 'antd';\r\n// 按需加载\r\nimport echarts from 'echarts/lib/echarts';\r\n// 导入柱形图\r\nimport 'echarts/lib/chart/bar'\r\nimport 'echarts/lib/component/title'\r\nimport 'echarts/lib/component/legend'\r\nimport 'echarts/lib/component/markPoint'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nclass ChartBar extends Component {\r\n\r\n  getOption = () => {\r\n    const option = {\r\n      title: {\r\n        text: '用户骑行订单'\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis' // 鼠标hover上去的效果\r\n      },\r\n      xAxis: {\r\n        data: ['周一','周二','周三','周四','周五','周六','周日']\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      series: [\r\n        {\r\n          name: '订单量',\r\n          type: 'bar',\r\n          data: [1000,2000,1500,3000,2000,1200,800]\r\n        }\r\n      ]\r\n\r\n    }\r\n    return option\r\n  }\r\n\r\n  getOption2 = () => {\r\n    const option = {\r\n      title: {\r\n        text: '用户骑行订单'\r\n      },\r\n      legend: {\r\n        data: ['OFO', '摩拜', '小毛']\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis' // 鼠标hover上去的效果\r\n      },\r\n      xAxis: {\r\n        data: ['周一','周二','周三','周四','周五','周六','周日',]\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      series: [\r\n        {\r\n          name: 'OFO',\r\n          type: 'bar',\r\n          data: [2000,3000,5500,7000,8000,12000,20000]\r\n        },\r\n        {\r\n          name: '摩拜',\r\n          type: 'bar',\r\n          data: [1500,3000,4500,6000,8000,10000,15000]\r\n        },\r\n        {\r\n          name: '小毛',\r\n          type: 'bar',\r\n          data: [1000,2000,2500,4000,6000,7000,8000]\r\n        }                \r\n      ]\r\n\r\n    }\r\n    return option    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title=\"柱形图表之一 \">\r\n          <ReactEcharts option={this.getOption()} style={{height: 500}} />\r\n        </Card>\r\n        <Card title=\"柱形图表之二\">\r\n          <ReactEcharts option={this.getOption2()} style={{height: 500}} />\r\n        </Card>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartBar;\r\n","import React,{ Component } from 'react';\r\nimport { Card } from 'antd';\r\n\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/pie'\r\nimport 'echarts/lib/component/title'\r\nimport 'echarts/lib/component/legend'\r\nimport 'echarts/lib/component/markPoint'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport default class ChartPie extends Component{\r\n\r\n    getOption = () => {\r\n        const option = {\r\n            title: {\r\n                text: '用户骑行订单',\r\n                x: 'center'\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                right: 10,\r\n                top: 20,\r\n                bottom: 20,\r\n                data: ['周一','周二','周三','周四','周五','周六','周日',]\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: '{a}<br/>{b}:{c}({d}% )'\r\n            },\r\n            series: [\r\n                {\r\n                    name: '订单量',\r\n                    type: 'pie',\r\n                    data: [\r\n                        {\r\n                            value: 1000,\r\n                            name: '周一'\r\n                        },\r\n                        {\r\n                            value: 1000,\r\n                            name: '周二'\r\n                        },\r\n                        {\r\n                            value: 2000,\r\n                            name: '周三'\r\n                        },\r\n                        {\r\n                            value: 1500,\r\n                            name: '周四'\r\n                        },\r\n                        {\r\n                            value: 3000,\r\n                            name: '周五'\r\n                        },\r\n                        {\r\n                            value: 2000,\r\n                            name: '周六'\r\n                        },\r\n                        {\r\n                            value: 1500,\r\n                            name: '周日'\r\n                        }\r\n                         \r\n                    ]\r\n                }\r\n            ]            \r\n        }\r\n        return option\r\n    }\r\n\r\n    getOption2 = () => {\r\n        const option = {\r\n            title: {\r\n                text: '用户骑行订单',\r\n                x: 'center'\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                right: 10,\r\n                top: 20,\r\n                bottom: 20,\r\n                data: ['周一','周二','周三','周四','周五','周六','周日',]\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: '{a}<br/>{b}:{c}({d}% )'\r\n            },\r\n            series: [\r\n                {\r\n                    name: '订单量',\r\n                    type: 'pie',\r\n                    radius: ['50%','75%'],\r\n                    data: [\r\n                        {\r\n                            value: 1000,\r\n                            name: '周一'\r\n                        },\r\n                        {\r\n                            value: 1000,\r\n                            name: '周二'\r\n                        },\r\n                        {\r\n                            value: 2000,\r\n                            name: '周三'\r\n                        },\r\n                        {\r\n                            value: 1500,\r\n                            name: '周四'\r\n                        },\r\n                        {\r\n                            value: 3000,\r\n                            name: '周五'\r\n                        },\r\n                        {\r\n                            value: 2000,\r\n                            name: '周六'\r\n                        },\r\n                        {\r\n                            value: 1500,\r\n                            name: '周日'\r\n                        }\r\n                         \r\n                    ]\r\n                }\r\n            ]            \r\n        }\r\n        return option        \r\n    }\r\n\r\n    getOption3 = () => {\r\n        const option = {\r\n            title: {\r\n                text: '用户骑行订单',\r\n                x: 'center'\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                right: 10,\r\n                top: 20,\r\n                bottom: 20,\r\n                data: ['周一','周二','周三','周四','周五','周六','周日',]\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: '{a}<br/>{b}:{c}({d}% )'\r\n            },\r\n            series: [\r\n                {\r\n                    name: '订单量',\r\n                    type: 'pie',\r\n                    data: [\r\n                        {\r\n                            value: 1000,\r\n                            name: '周一'\r\n                        },\r\n                        {\r\n                            value: 1000,\r\n                            name: '周二'\r\n                        },\r\n                        {\r\n                            value: 2000,\r\n                            name: '周三'\r\n                        },\r\n                        {\r\n                            value: 1500,\r\n                            name: '周四'\r\n                        },\r\n                        {\r\n                            value: 3000,\r\n                            name: '周五'\r\n                        },\r\n                        {\r\n                            value: 2000,\r\n                            name: '周六'\r\n                        },\r\n                        {\r\n                            value: 1500,\r\n                            name: '周日'\r\n                        }                     \r\n                    ].sort((a,b) => {\r\n                        return a.value - b.value\r\n                    }),\r\n                    roseType: 'radius'\r\n                }\r\n            ]            \r\n        }\r\n        return option        \r\n    }\r\n\r\n    render (){\r\n        return (\r\n            <div>\r\n                <Card title=\"饼形图表之一\">\r\n                    <ReactEcharts option={this.getOption()} style={{height:500}} />\r\n                </Card>\r\n                <Card title=\"饼形图表之二\">\r\n                    <ReactEcharts option={this.getOption2()} style={{height:500}} />\r\n                </Card>\r\n                <Card title=\"饼形图表之三\">\r\n                    <ReactEcharts option={this.getOption3()} style={{height:500}} />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{ Component } from 'react';\r\nimport { Card } from 'antd';\r\n\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line'\r\nimport 'echarts/lib/component/title'\r\nimport 'echarts/lib/component/legend'\r\nimport 'echarts/lib/component/markPoint'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport default class ChartLine extends Component{\r\n\r\n    getOption = () => {\r\n        const option = {\r\n            title: {\r\n                text: '用户骑行订单'\r\n            },\r\n            xAxis: {\r\n                data: ['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            series: [\r\n                {\r\n                    name: '订单量',\r\n                    type: 'line',\r\n                    data: [1000, 2000, 1500, 2500, 3000, 2800, 4500, 3500]\r\n                }\r\n            ]            \r\n        }\r\n        return option\r\n    }\r\n\r\n    getOption2 = () => {\r\n        const option = {\r\n            title: {\r\n                text: '用户骑行订单'\r\n            },\r\n            legend: {\r\n                data: ['OFO订单量','摩拜订单量','小毛订单量']\r\n            },\r\n            xAxis: {\r\n                data: ['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'OFO订单量',\r\n                    type: 'line',\r\n                    data: [1000, 2000, 1500, 2500, 3000, 2800, 4500, 3500]\r\n                },\r\n                {\r\n                    name: '摩拜订单量',\r\n                    type: 'line',\r\n                    data: [1000, 2000, 5500, 6500, 3000, 8800, 10500, 12000]\r\n                },\r\n                {\r\n                    name: '小毛订单量',\r\n                    type: 'line',\r\n                    data: [800, 2000, 2500, 4500, 6000, 8800, 11500, 13500]\r\n                }               \r\n            ]            \r\n        }\r\n        return option        \r\n    }\r\n\r\n    getOption3 = () => {\r\n        const option = {\r\n            title: {\r\n                text: '用户骑行订单'\r\n            },\r\n            xAxis: {\r\n                boundaryGap: false,\r\n                data: ['周一','周二','周三','周四','周五','周六','周日']\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            series: [\r\n                {\r\n                    name: '订单量',\r\n                    type: 'line',\r\n                    data: [1000, 2000, 1500, 2500, 3000, 2800, 4500, 3500],\r\n                    areaStyle: {}\r\n                }\r\n            ]            \r\n        }\r\n        return option\r\n    }    \r\n\r\n    render (){\r\n        return (\r\n            <div>\r\n                <Card title=\"线性图表之一\">\r\n                    <ReactEcharts option={this.getOption()} style={{height: 500}} />\r\n                </Card>\r\n                <Card title=\"线性图表之二\">\r\n                    <ReactEcharts option={this.getOption2()} style={{height: 500}} />\r\n                </Card>\r\n                <Card title=\"线性图表之一\">\r\n                    <ReactEcharts option={this.getOption3()} style={{height: 500}} />\r\n                </Card>                                \r\n            </div>\r\n        )\r\n    }\r\n}","import React,{ Component } from 'react';\r\nimport { Card,Button,Modal,Form,Select,Input,message,Tree,Transfer } from 'antd';\r\nimport ETable from './../../components/ETable'\r\nimport Utils from './../../utils/utils'\r\nimport axios from './../../axios'\r\nimport TreeData from './../../config/menuConfig'\r\nconst FormItem = Form.Item\r\nconst Option = Select.Option\r\nconst { TreeNode } = Tree\r\n\r\nexport default class PermissionIndex extends Component{\r\n\r\n    state = {\r\n        showCreateForm: false,\r\n        isPermVisible: false,\r\n        isAuthorize: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        axios.requestList(this,'/role/list',{});\r\n    }\r\n\r\n    handleCreatUser = () => {\r\n        this.setState({\r\n            showCreateForm: true\r\n        })\r\n    }\r\n    // 打开设置权限弹窗\r\n    handleSetAuth = () => {\r\n        const item = this.state.selectedItem;\r\n        if ( !item ) {\r\n            Modal.info({\r\n                content: '请选择一个角色'\r\n            })\r\n            return;\r\n        }\r\n        this.setState({\r\n            isPermVisible: true,\r\n            detailInfo: item,\r\n            menuInfo: item.menus\r\n        })\r\n    }\r\n    // 设置权限提交\r\n    handlePermOk = () => {\r\n        const data = this.permEditForm.props.form.getFieldsValue();\r\n        data.role_id = this.state.selectedItem.id;\r\n        data.menuInfo = this.state.menuInfo;\r\n        axios.ajax({\r\n            url: '/permission/edit',\r\n            data: {\r\n                params: {\r\n                    ...data\r\n                }\r\n            }\r\n        }).then( res => {\r\n            if (res.code === 200) {\r\n                message.success('设置成功');\r\n                this.setState({\r\n                    isPermVisible: false\r\n                });\r\n                axios.requestList(this,'/role/list',{});\r\n            }\r\n        })\r\n    }\r\n    // 创建角色提交\r\n    handleRoleSubmit = () => {\r\n        const data = this.roleForm.props.form.getFieldsValue();\r\n        axios.ajax({\r\n            url: '/role/create',\r\n            dara: {\r\n                params: data\r\n            }\r\n        }).then(res=> {\r\n            message.success('创建成功');\r\n            if (res.code === 200) {\r\n                this.setState({\r\n                    showCreateForm: false\r\n                });\r\n                axios.requestList(this,'/role/list',{});\r\n                this.roleForm.props.form.resetFields();\r\n            }\r\n        })\r\n    }\r\n    // 打开用户授权弹出框\r\n    handleUser = () => {\r\n        const item = this.state.selectedItem;\r\n        if ( !item ) {\r\n            Modal.info({\r\n                content: '请选择一个用户'\r\n            })\r\n            return;\r\n        }\r\n        this.getRoleUserList(item.id);\r\n        this.setState({\r\n            isAuthorize: true,\r\n            detailInfo: item\r\n        })        \r\n    }\r\n\r\n    // 获取用户列表\r\n    getRoleUserList = (id) => {\r\n        axios.ajax({\r\n            url: '/role/user_list',\r\n            data: {\r\n                params: {\r\n                    id\r\n                }\r\n            }\r\n        }).then( res => {\r\n            if ( res ){                \r\n                this.getAuthUserList(res.result)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 筛选目标用户\r\n    getAuthUserList = (dataSource) => {\r\n        let mockData = [];\r\n        let targetKeys = [];\r\n        if (dataSource && dataSource.length > 0) {\r\n            for(let i = 0; i < dataSource.length; i++) {\r\n                const data = {\r\n                    key: dataSource[i].user_id,\r\n                    title: dataSource[i].user_name,\r\n                    status: dataSource[i].status\r\n                }\r\n                if ( data.status === 1 ) {\r\n                    targetKeys.push(data.key)\r\n                }\r\n                mockData.push(data)\r\n                               \r\n            }\r\n            this.setState({\r\n                mockData,\r\n                targetKeys\r\n            })\r\n        }\r\n    }\r\n\r\n    // 用户授权提交\r\n    handleAuthCommit = () => {\r\n        const data = {};\r\n        data.user_ids = this.state.targetKeys;\r\n        data.role_id = this.state.selectedItem.id;\r\n        console.log(data);\r\n        axios.ajax({\r\n            url: '/role/user_role_edit',\r\n            data: {\r\n                params: {\r\n                    ...data\r\n                }\r\n            }\r\n        }).then( res => {\r\n            if ( res ) {\r\n               this.setState({\r\n                   isAuthorize: false\r\n               }) \r\n               axios.requestList(this,'/role/list',{});\r\n            }\r\n        })\r\n    }\r\n\r\n    render () {\r\n\r\n        const columns = [\r\n            {\r\n                title: '角色ID',\r\n                dataIndex: 'id'\r\n            },\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'role_name'                \r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'create_time'                \r\n            },            \r\n            {\r\n                title: '使用状态',\r\n                dataIndex: 'status',\r\n                render: status => {\r\n                    return status === 0 ? '启用' : '停用'\r\n                }\r\n            },\r\n            {\r\n                title: '授权时间',\r\n                dataIndex: 'authorize_time',\r\n                render: Utils.formateDate\r\n            },\r\n            {\r\n                title: '授权人',\r\n                dataIndex: 'authorize_user_name'\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type=\"primary\" onClick={this.handleCreatUser}>创建用户</Button>\r\n                    <Button type=\"primary\" onClick={this.handleSetAuth}>设置权限</Button>\r\n                    <Button type=\"primary\" onClick={this.handleUser}>用户授权</Button>\r\n                </Card>\r\n                <Card>\r\n                    <ETable \r\n                        updateSelectedItem={Utils.updateSelectedItem.bind(this)}\r\n                        selectedRowKeys={this.state.selectedRowKeys}\r\n                        dataSource={this.state.list}\r\n                        columns= { columns }\r\n                    />\r\n                </Card>\r\n                <Modal\r\n                    title=\"创建角色\"\r\n                    visible={this.state.showCreateForm}\r\n                    onOk={ this.handleRoleSubmit }\r\n                    onCancel={ () => {\r\n                        this.roleForm.props.form.resetFields(); // 防止输入到一半的时候点取消，此时要清空内容\r\n                        this.setState({\r\n                            showCreateForm: false\r\n                        })\r\n                    }}\r\n                >\r\n                    <RoleForm wrappedComponentRef={ (inst) => this.roleForm = inst } />\r\n                </Modal>\r\n                <Modal\r\n                    title=\"设置权限\"\r\n                    width={600}\r\n                    visible={this.state.isPermVisible}\r\n                    onOk={this.handlePermOk}\r\n                    onCancel={ () => {\r\n                        this.setState({\r\n                            isPermVisible: false\r\n                        })\r\n                    }}\r\n                >\r\n                    <PermEditForm \r\n                        detailInfo={this.state.detailInfo} \r\n                        menuInfo={ this.state.menuInfo }\r\n                        wrappedComponentRef={ inst => this.permEditForm = inst }\r\n                        patchMenuInfo={ (checkedKeys) => {\r\n                            this.setState({\r\n                                menuInfo: checkedKeys\r\n                            })\r\n                        }} \r\n                    />\r\n                </Modal>\r\n                <Modal\r\n                    title=\"用户授权\"\r\n                    width={800}\r\n                    visible={this.state.isAuthorize}\r\n                    onOk={ this.handleAuthCommit }\r\n                    onCancel= { () =>{\r\n                        this.setState({\r\n                            isAuthorize: false\r\n                        })\r\n                    }}\r\n                >\r\n                    <RoleAuthForm \r\n                        detailInfo={this.state.detailInfo} \r\n                        targetKeys={ this.state.targetKeys }\r\n                        mockData={ this.state.mockData }\r\n                        wrappedComponentRef={ inst => this.roleAuthForm = inst }\r\n                        patchUserInfo={(targetKeys) => {\r\n                            this.setState({\r\n                                targetKeys\r\n                            })\r\n                        }}\r\n                    />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass RoleForm extends Component {\r\n    render () {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: {span: 5},\r\n            wrapperCol: {span: 15}\r\n        }\r\n        return (\r\n            <Form layout=\"horizontal\">\r\n                <FormItem label=\"角色名称\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('role_name')(\r\n                            <Input type=\"text\" placeholder=\"请输入用户名\" />\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"状态\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('status')(\r\n                            <Select>\r\n                                <Option value={1}>开启</Option>\r\n                                <Option value={0}>关闭</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>                                                               \r\n            </Form>\r\n        )\r\n    }\r\n}\r\nRoleForm = Form.create({})(RoleForm)\r\n\r\nclass PermEditForm extends Component {\r\n\r\n    renderTreeNodes = (data) => {\r\n        return data.map( item => {\r\n            if ( item.children ) {\r\n                return (<TreeNode {...item}>\r\n                    {this.renderTreeNodes(item.children)}\r\n                </TreeNode>)\r\n            }else {\r\n                return <TreeNode {...item} />\r\n            }\r\n        })\r\n    }\r\n\r\n    handleTreeCheck = (keys) =>{\r\n        this.props.patchMenuInfo(keys);\r\n    }\r\n\r\n    render() {\r\n        const detail_Info = this.props.detailInfo;\r\n        const menu_Info = this.props.menuInfo; \r\n        const formItemLayout = {\r\n            labelCol: {span: 5},\r\n            wrapperCol: {span: 15}\r\n        }   \r\n        const { getFieldDecorator } = this.props.form     \r\n        return (\r\n            <Form layout=\"horizontal\"> \r\n                <FormItem label=\"角色名称\" {...formItemLayout}>\r\n                    <Input disabled placeholder={detail_Info.role_name} />\r\n                </FormItem>\r\n                <FormItem label=\"状态\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('status',{\r\n                            initialValue: 1\r\n                        })(\r\n                            <Select>\r\n                                <Option value={1}>启用</Option>\r\n                                <Option value={0}>停用</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem> \r\n                <Tree\r\n                    checkable\r\n                    defaultExpandAll\r\n                    onCheck={ checkedKeys => { this.handleTreeCheck(checkedKeys) }}\r\n                    checkedKeys={ menu_Info }\r\n                >\r\n                    <TreeNode title=\"平台权限\" key=\"plateform_all\">\r\n                        {this.renderTreeNodes(TreeData)}\r\n                    </TreeNode>    \r\n                </Tree>               \r\n            </Form>\r\n        )\r\n    }\r\n}\r\nPermEditForm = Form.create({})(PermEditForm)\r\n\r\nclass RoleAuthForm extends Component{\r\n   \r\n    filterOption = (inputValue, option) => {\r\n        return option.titles.indexOf(inputValue) > -1\r\n    }\r\n\r\n    handleAuthChange = (targetKeys) => {\r\n        this.props.patchUserInfo(targetKeys)\r\n    }\r\n    \r\n    render () {\r\n        const detail_Info = this.props.detailInfo;\r\n        const formItemLayout = {\r\n            labelCol: {span: 5},\r\n            wrapperCol: {span: 15}\r\n        }         \r\n        return (\r\n            <Form layout=\"horizontal\">\r\n                <FormItem label=\"角色名称\" {...formItemLayout}>\r\n                    <Input disabled placeholder={detail_Info.role_name} />\r\n                </FormItem>\r\n                <FormItem label=\"选择用户\" {...formItemLayout}>\r\n                    <Transfer \r\n                        listStyle={{width:200,height:400}}\r\n                        dataSource={ this.props.mockData }\r\n                        titles={['待选用户', '已选用户']}\r\n                        showSearch\r\n                        searchPlaceholder=\"请输入用户名\"\r\n                        filterOption={this.filterOption}\r\n                        targetKeys={ this.props.targetKeys }\r\n                        render={item => item.title}\r\n                        onChange={ this.handleAuthChange }\r\n                    />\r\n                </FormItem>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nRoleAuthForm = Form.create({})(RoleAuthForm);","import React,{ Component } from 'react'\r\n\r\nexport default class NoMatch extends Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                This is 404 no page\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { HashRouter,Route,Switch,Redirect } from 'react-router-dom'\r\nimport App from './App'\r\nimport Login from './pages/login'\r\nimport Admin from './admin'\r\nimport Home from './pages/home'\r\nimport Buttons from './pages/ui/Buttons'\r\nimport Modal from './pages/ui/Modal'\r\nimport Loading from './pages/ui/loading'\r\nimport Notice from './pages/ui/notice'\r\nimport Message from './pages/ui/Message'\r\nimport Tabs from './pages/ui/Tabs'\r\nimport Gallery from './pages/ui/Gallery'\r\nimport Carousel from './pages/ui/Carousel'\r\nimport FormLogin from './pages/form/Login'\r\nimport FormRegist from './pages/form/Regist'\r\nimport Basic from './pages/table/Basic'\r\nimport High from './pages/table/High'\r\nimport Rich from './pages/rich'\r\nimport CityIndex from './pages/city'\r\nimport OrderIndex from './pages/order'\r\nimport Common from './Common'\r\nimport OrderDetail from './pages/order/Detail'\r\nimport UserIndex from './pages/user'\r\nimport BikeMap from './pages/map/bikeMap'\r\nimport ChartBar from './pages/chart/bar'\r\nimport ChartPie from './pages/chart/pie'\r\nimport ChartLine from './pages/chart/line'\r\nimport PermissionIndex from './pages/permission'\r\nimport NoMatch from './pages/nomatch'\r\n\r\nexport default class IRouter extends Component {\r\n    render () {\r\n        return (\r\n            <HashRouter>\r\n                <App>\r\n                    <Switch>\r\n                        <Route path=\"/login\" component={ Login } />\r\n                        <Route path=\"/common\" render={ ()=> \r\n                            <Common>\r\n                                <Switch>\r\n                                    <Route path=\"/common/order/detail/:orderId\" component={ OrderDetail }></Route>\r\n                                    <Route component={ NoMatch }></Route>\r\n                                </Switch>\r\n                            </Common>\r\n                        }/>                        \r\n                        <Route path=\"/\" render={() => \r\n                            <Admin>\r\n                                <Switch>                                    \r\n                                    <Route path=\"/home\" component={ Home } />\r\n                                    <Route path=\"/ui/buttons\" component={ Buttons }></Route>\r\n                                    <Route path=\"/ui/modals\" component={ Modal }></Route>\r\n                                    <Route path=\"/ui/loadings\" component={ Loading }></Route>\r\n                                    <Route path=\"/ui/notification\" component={ Notice }></Route>\r\n                                    <Route path=\"/ui/messages\" component={ Message }></Route>\r\n                                    <Route path=\"/ui/tabs\" component={ Tabs }></Route>\r\n                                    <Route path=\"/ui/gallery\" component={ Gallery }></Route>\r\n                                    <Route path=\"/ui/carousel\" component={ Carousel }></Route>\r\n                                    <Route path=\"/form/login\" component={ FormLogin }></Route>\r\n                                    <Route path=\"/form/reg\" component={ FormRegist }></Route>\r\n                                    <Route path=\"/table/basic\" component={ Basic }></Route>\r\n                                    <Route path=\"/table/high\" component={ High }></Route>\r\n                                    <Route path=\"/rich\" component={ Rich }></Route>\r\n                                    <Route path=\"/city\" component={ CityIndex }></Route>\r\n                                    <Route path=\"/order\" component={ OrderIndex }></Route>\r\n                                    <Route path=\"/user\" component={ UserIndex }></Route>\r\n                                    <Route path=\"/bikeMap\" component={ BikeMap }></Route>\r\n                                    <Route path=\"/charts/bar\" component={ ChartBar }></Route>\r\n                                    <Route path=\"/charts/pie\" component={ ChartPie }></Route>\r\n                                    <Route path=\"/charts/line\" component={ ChartLine }></Route>\r\n                                    <Route path=\"/permission\" component={ PermissionIndex }></Route>\r\n                                    <Redirect to=\"/home\" />\r\n                                    <Route component={ NoMatch }  />\r\n                                </Switch>\r\n                            </Admin>\r\n                        }/>\r\n                        <Route component={ NoMatch } />\r\n                    </Switch>\r\n                </App>\r\n            </HashRouter>\r\n        )\r\n    }\r\n} ","import { type } from \"./../action\";\r\n\r\n/* \r\n* reducer 数据处理\r\n*/\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case type.SWITCH_MENU:\r\n            return {\r\n                ...state,\r\n                menuName: action.menuName\r\n            }   \r\n        default:\r\n            return {...state}\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Router from './router'\r\nimport { Provider } from 'react-redux'\r\nimport configStore from './redux/store'\r\nconst store = configStore()\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n","import { createStore  } from 'redux'\r\nimport reducer from './../reducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nexport default () => createStore(reducer,composeWithDevTools())"],"sourceRoot":""}